"use strict";(self.webpackChunkdevelopers_doc=self.webpackChunkdevelopers_doc||[]).push([[30641],{33298:(e,t,n)=>{n.d(t,{A:()=>a});n(96540);var i=n(45284),o=n(36175),s=n(51151),r=n(73906),c=n(74848);function a(e){let{children:t}=e;const n={portal:o.F.portal,locale:{default:"en"},session:{type:"OAuth",clientId:o.F.user.client_id},theme:s.Ay,handleAnonymousAction:()=>{alert("Anonymous action")}};return(0,c.jsx)(r.A,{children:()=>(0,c.jsx)(i.Ay,{conf:n,children:t})})}},36175:(e,t,n)=>{n.d(t,{F:()=>i});const i={user:{username:"beatrice",password:"Password!!Beatrice2021",client_id:"XJjPE54IBBjhibs0Rf0wZ969cZNPq6WjC02FrkaM",grant_type:"password"},portal:"https://internal.selfcommunity.io/mkg2zxd0"}},99081:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>d,contentTitle:()=>p,default:()=>u,frontMatter:()=>a,metadata:()=>i,toc:()=>m});const i=JSON.parse('{"id":"sdk/community-js/react-ui/Components/SnippetNotifications","title":"Snippet Notifications","description":"The Snippet Notifications component renders the notification list.","source":"@site/docs/sdk/community-js/react-ui/Components/SnippetNotifications.mdx","sourceDirName":"sdk/community-js/react-ui/Components","slug":"/sdk/community-js/react-ui/Components/SnippetNotifications","permalink":"/docs/sdk/community-js/react-ui/Components/SnippetNotifications","draft":false,"unlisted":false,"editUrl":"https://github.com/selfcommunity/developers-doc/tree/main/docs/sdk/community-js/react-ui/Components/SnippetNotifications.mdx","tags":[],"version":"current","sidebarPosition":1,"frontMatter":{"sidebar_label":"Snippet Notifications","sidebar_position":1,"title":"Snippet Notifications"},"sidebar":"sdkSidebar","previous":{"title":"Related Feed Objects Widget","permalink":"/docs/sdk/community-js/react-ui/Components/RelatedFeedObjects"},"next":{"title":"Private Message Snippets","permalink":"/docs/sdk/community-js/react-ui/Components/Snippets"}}');var o=n(74848),s=n(28453),r=n(33298),c=n(77409);const a={sidebar_label:"Snippet Notifications",sidebar_position:1,title:"Snippet Notifications"},p=void 0,d={},m=[{value:"Usage",id:"usage",level:4}];function l(e){const t={blockquote:"blockquote",code:"code",h4:"h4",p:"p",pre:"pre",...(0,s.R)(),...e.components};return(0,o.jsxs)(o.Fragment,{children:[(0,o.jsxs)(t.blockquote,{children:["\n",(0,o.jsxs)(t.p,{children:["The Snippet Notifications component renders the notification list.",(0,o.jsx)("br",{}),"\nSnippet notifications items are composed of the user avatar and username and the notification content."]}),"\n"]}),"\n","\n",(0,o.jsx)(r.A,{children:(0,o.jsx)(c.A,{})}),"\n",(0,o.jsx)(t.h4,{id:"usage",children:"Usage"}),"\n",(0,o.jsx)(t.pre,{children:(0,o.jsx)(t.code,{className:"language-jsx",children:" import React from 'react';\n import {SCContextProvider} from '@selfcommunity/react-core';\n import {SnippetNotifications} from '@selfcommunity/react-ui';\n\n function App() {\n   const conf = {\n     portal: '<community-path>',\n     session: {\n       type: 'OAuth',\n       token: '<community-token>',\n       refreshToken: '<community-refresh-token>',\n       refreshTokenEndpoint: '<community-refresh-endpoint>',\n     },\n   };\n   return (\n     <SCContextProvider conf={conf}><SnippetNotifications /></SCContextProvider>\n   );\n }\n"})})]})}function u(e={}){const{wrapper:t}={...(0,s.R)(),...e.components};return t?(0,o.jsx)(t,{...e,children:(0,o.jsx)(l,{...e})}):l(e)}}}]);