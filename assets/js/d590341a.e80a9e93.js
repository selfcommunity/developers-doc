"use strict";(self.webpackChunkdevelopers_doc=self.webpackChunkdevelopers_doc||[]).push([[13942],{28453:(e,t,r)=>{r.d(t,{R:()=>a,x:()=>d});var n=r(96540);const s={},i=n.createContext(s);function a(e){const t=n.useContext(i);return n.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function d(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:a(e.components),n.createElement(i.Provider,{value:t},e.children)}},63140:(e,t,r)=>{r.r(t),r.d(t,{assets:()=>c,contentTitle:()=>d,default:()=>h,frontMatter:()=>a,metadata:()=>n,toc:()=>o});const n=JSON.parse('{"id":"apireference/v2/schemas/avatar","title":"Avatar","description":"Properties","source":"@site/docs/apireference/v2/schemas/avatar.md","sourceDirName":"apireference/v2/schemas","slug":"/apireference/v2/schemas/avatar","permalink":"/docs/apireference/v2/schemas/avatar","draft":false,"unlisted":false,"editUrl":"https://github.com/selfcommunity/developers-doc/tree/main/docs/apireference/v2/schemas/avatar.md","tags":[],"version":"current","sidebarPosition":1,"frontMatter":{"sidebar_label":"Avatar","sidebar_position":1,"title":"Avatar"},"sidebar":"apireferenceSidebar","previous":{"title":"Attempt","permalink":"/docs/apireference/v2/schemas/attempt"},"next":{"title":"Blocked Settings","permalink":"/docs/apireference/v2/schemas/blocked_settings"}}');var s=r(74848),i=r(28453);const a={sidebar_label:"Avatar",sidebar_position:1,title:"Avatar"},d=void 0,c={},o=[{value:"Properties",id:"properties",level:4}];function l(e){const t={code:"code",h4:"h4",pre:"pre",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",...(0,i.R)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{className:"language-json",children:'{\n    "id": "integer",\n    "primary": "boolean",\n    "avatar": "string(uri)",\n    "date_uploaded": "string",\n    "user": "integer"\n}\n\n'})}),"\n",(0,s.jsx)(t.h4,{id:"properties",children:"Properties"}),"\n",(0,s.jsxs)(t.table,{children:[(0,s.jsx)(t.thead,{children:(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.th,{children:"Name"}),(0,s.jsx)(t.th,{children:"Type"}),(0,s.jsx)(t.th,{children:"Description"})]})}),(0,s.jsxs)(t.tbody,{children:[(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:"id"}),(0,s.jsx)(t.td,{children:"integer"}),(0,s.jsx)(t.td,{children:"A unique integer value identifying this avatar"})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:"primary"}),(0,s.jsx)(t.td,{children:"boolean"}),(0,s.jsx)(t.td,{children:"If true, it is the user primary avatar"})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:"avatar"}),(0,s.jsx)(t.td,{children:"string(binary)\xa6null"}),(0,s.jsx)(t.td,{children:"The avatar url"})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:"date_uploaded"}),(0,s.jsx)(t.td,{children:"string(date-time)"}),(0,s.jsx)(t.td,{children:"Upload datetime"})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:"user"}),(0,s.jsx)(t.td,{children:"integer"}),(0,s.jsx)(t.td,{children:"The user id for this avatar"})]})]})]})]})}function h(e={}){const{wrapper:t}={...(0,i.R)(),...e.components};return t?(0,s.jsx)(t,{...e,children:(0,s.jsx)(l,{...e})}):l(e)}}}]);