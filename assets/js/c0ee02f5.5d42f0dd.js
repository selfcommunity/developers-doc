"use strict";(self.webpackChunkdevelopers_doc=self.webpackChunkdevelopers_doc||[]).push([[38873],{28453:(e,s,t)=>{t.d(s,{R:()=>c,x:()=>i});var r=t(96540);const n={},d=r.createContext(n);function c(e){const s=r.useContext(d);return r.useMemo((function(){return"function"==typeof e?e(s):{...s,...e}}),[s,e])}function i(e){let s;return s=e.disableParentContext?"function"==typeof e.components?e.components(n):e.components||n:c(e.components),r.createElement(d.Provider,{value:s},e.children)}},32278:(e,s,t)=>{t.r(s),t.d(s,{assets:()=>o,contentTitle:()=>i,default:()=>a,frontMatter:()=>c,metadata:()=>r,toc:()=>l});const r=JSON.parse('{"id":"sdk/community-js/types/Reference/interfaces/SCCourseSectionType","title":"SCCourseSectionType","description":"Interface SCCourseSectionType.","source":"@site/docs/sdk/community-js/types/Reference/interfaces/SCCourseSectionType.md","sourceDirName":"sdk/community-js/types/Reference/interfaces","slug":"/sdk/community-js/types/Reference/interfaces/SCCourseSectionType","permalink":"/docs/sdk/community-js/types/Reference/interfaces/SCCourseSectionType","draft":false,"unlisted":false,"editUrl":"https://github.com/selfcommunity/developers-doc/tree/main/docs/sdk/community-js/types/Reference/interfaces/SCCourseSectionType.md","tags":[],"version":"current","frontMatter":{},"sidebar":"sdkSidebar","previous":{"title":"SCCourseLessonType","permalink":"/docs/sdk/community-js/types/Reference/interfaces/SCCourseLessonType"},"next":{"title":"SCCourseType","permalink":"/docs/sdk/community-js/types/Reference/interfaces/SCCourseType"}}');var n=t(74848),d=t(28453);const c={},i="SCCourseSectionType",o={},l=[{value:"Properties",id:"properties",level:2}];function h(e){const s={a:"a",code:"code",h1:"h1",h2:"h2",header:"header",p:"p",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",...(0,d.R)(),...e.components};return(0,n.jsxs)(n.Fragment,{children:[(0,n.jsx)(s.header,{children:(0,n.jsx)(s.h1,{id:"sccoursesectiontype",children:"SCCourseSectionType"})}),"\n",(0,n.jsx)(s.p,{children:"Interface SCCourseSectionType.\nCourse Schema."}),"\n",(0,n.jsx)(s.h2,{id:"properties",children:"Properties"}),"\n",(0,n.jsxs)(s.table,{children:[(0,n.jsx)(s.thead,{children:(0,n.jsxs)(s.tr,{children:[(0,n.jsx)(s.th,{children:"Property"}),(0,n.jsx)(s.th,{children:"Type"}),(0,n.jsx)(s.th,{children:"Description"})]})}),(0,n.jsxs)(s.tbody,{children:[(0,n.jsxs)(s.tr,{children:[(0,n.jsxs)(s.td,{children:[(0,n.jsx)("a",{id:"available_date"})," ",(0,n.jsx)(s.code,{children:"available_date?"})]}),(0,n.jsx)(s.td,{children:(0,n.jsx)(s.code,{children:"string"})}),(0,n.jsx)(s.td,{children:"Determines when the current section will be available for the user. The value will be null if the course type is self-paced"})]}),(0,n.jsxs)(s.tr,{children:[(0,n.jsxs)(s.td,{children:[(0,n.jsx)("a",{id:"drip_delay"})," ",(0,n.jsx)(s.code,{children:"drip_delay?"})]}),(0,n.jsx)(s.td,{children:(0,n.jsx)(s.code,{children:"number"})}),(0,n.jsx)(s.td,{children:"Sections are dripped relative to the enrollment date of the current user; used only if the course type is structured ."})]}),(0,n.jsxs)(s.tr,{children:[(0,n.jsxs)(s.td,{children:[(0,n.jsx)("a",{id:"dripped_at"})," ",(0,n.jsx)(s.code,{children:"dripped_at?"})]}),(0,n.jsxs)(s.td,{children:[(0,n.jsx)(s.code,{children:"string"})," | ",(0,n.jsx)(s.code,{children:"Date"})]}),(0,n.jsx)(s.td,{children:"Sections are dripped relative to this date; used only id course type is scheduled"})]}),(0,n.jsxs)(s.tr,{children:[(0,n.jsxs)(s.td,{children:[(0,n.jsx)("a",{id:"id"})," ",(0,n.jsx)(s.code,{children:"id?"})]}),(0,n.jsx)(s.td,{children:(0,n.jsx)(s.code,{children:"number"})}),(0,n.jsx)(s.td,{children:"The ID of the course section."})]}),(0,n.jsxs)(s.tr,{children:[(0,n.jsxs)(s.td,{children:[(0,n.jsx)("a",{id:"lessons"})," ",(0,n.jsx)(s.code,{children:"lessons?"})]}),(0,n.jsxs)(s.td,{children:[(0,n.jsx)(s.a,{href:"/docs/sdk/community-js/types/Reference/interfaces/SCCourseLessonType",children:(0,n.jsx)(s.code,{children:"SCCourseLessonType"})}),"[]"]}),(0,n.jsx)(s.td,{children:"The lessons associated to the course section"})]}),(0,n.jsxs)(s.tr,{children:[(0,n.jsxs)(s.td,{children:[(0,n.jsx)("a",{id:"lessons_order"})," ",(0,n.jsx)(s.code,{children:"lessons_order?"})]}),(0,n.jsxs)(s.td,{children:[(0,n.jsx)(s.code,{children:"number"}),"[]"]}),(0,n.jsx)(s.td,{children:"The list of all lesson IDs belonging to the current section course"})]}),(0,n.jsxs)(s.tr,{children:[(0,n.jsxs)(s.td,{children:[(0,n.jsx)("a",{id:"locked"})," ",(0,n.jsx)(s.code,{children:"locked?"})]}),(0,n.jsx)(s.td,{children:(0,n.jsx)(s.code,{children:"boolean"})}),(0,n.jsx)(s.td,{children:"Determines whether the current section is locked for the user based on the section availability strategy. The value will not be considered if the course type is self-paced"})]}),(0,n.jsxs)(s.tr,{children:[(0,n.jsxs)(s.td,{children:[(0,n.jsx)("a",{id:"name"})," ",(0,n.jsx)(s.code,{children:"name?"})]}),(0,n.jsx)(s.td,{children:(0,n.jsx)(s.code,{children:"string"})}),(0,n.jsx)(s.td,{children:"The name of the section course"})]}),(0,n.jsxs)(s.tr,{children:[(0,n.jsxs)(s.td,{children:[(0,n.jsx)("a",{id:"num_lessons"})," ",(0,n.jsx)(s.code,{children:"num_lessons?"})]}),(0,n.jsx)(s.td,{children:(0,n.jsx)(s.code,{children:"number"})}),(0,n.jsx)(s.td,{children:"Total number of published lessons of the current course section"})]}),(0,n.jsxs)(s.tr,{children:[(0,n.jsxs)(s.td,{children:[(0,n.jsx)("a",{id:"num_lessons_completed"})," ",(0,n.jsx)(s.code,{children:"num_lessons_completed?"})]}),(0,n.jsx)(s.td,{children:(0,n.jsx)(s.code,{children:"number"})}),(0,n.jsx)(s.td,{children:"Number of lessons completed by the user in the current course section"})]})]})]})]})}function a(e={}){const{wrapper:s}={...(0,d.R)(),...e.components};return s?(0,n.jsx)(s,{...e,children:(0,n.jsx)(h,{...e})}):h(e)}}}]);