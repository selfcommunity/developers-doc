"use strict";(self.webpackChunkdevelopers_doc=self.webpackChunkdevelopers_doc||[]).push([[66997],{28453:(e,t,s)=>{s.d(t,{R:()=>i,x:()=>c});var d=s(96540);const n={},r=d.createContext(n);function i(e){const t=d.useContext(r);return d.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function c(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(n):e.components||n:i(e.components),d.createElement(r.Provider,{value:t},e.children)}},87661:(e,t,s)=>{s.r(t),s.d(t,{assets:()=>a,contentTitle:()=>c,default:()=>h,frontMatter:()=>i,metadata:()=>d,toc:()=>o});const d=JSON.parse('{"id":"sdk/community-js/types/Reference/interfaces/SCMetadataType","title":"SCMetadataType","description":"Metadata type used to render custom fields","source":"@site/docs/sdk/community-js/types/Reference/interfaces/SCMetadataType.md","sourceDirName":"sdk/community-js/types/Reference/interfaces","slug":"/sdk/community-js/types/Reference/interfaces/SCMetadataType","permalink":"/docs/sdk/community-js/types/Reference/interfaces/SCMetadataType","draft":false,"unlisted":false,"editUrl":"https://github.com/selfcommunity/developers-doc/tree/main/docs/sdk/community-js/types/Reference/interfaces/SCMetadataType.md","tags":[],"version":"current","frontMatter":{},"sidebar":"sdkSidebar","previous":{"title":"SCMediaType","permalink":"/docs/sdk/community-js/types/Reference/interfaces/SCMediaType"},"next":{"title":"SCNotificationAggregatedType","permalink":"/docs/sdk/community-js/types/Reference/interfaces/SCNotificationAggregatedType"}}');var n=s(74848),r=s(28453);const i={},c="SCMetadataType",a={},o=[{value:"Properties",id:"properties",level:2}];function l(e){const t={a:"a",code:"code",h1:"h1",h2:"h2",header:"header",p:"p",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",...(0,r.R)(),...e.components};return(0,n.jsxs)(n.Fragment,{children:[(0,n.jsx)(t.header,{children:(0,n.jsx)(t.h1,{id:"scmetadatatype",children:"SCMetadataType"})}),"\n",(0,n.jsx)(t.p,{children:"Metadata type used to render custom fields"}),"\n",(0,n.jsx)(t.h2,{id:"properties",children:"Properties"}),"\n",(0,n.jsxs)(t.table,{children:[(0,n.jsx)(t.thead,{children:(0,n.jsxs)(t.tr,{children:[(0,n.jsx)(t.th,{children:"Property"}),(0,n.jsx)(t.th,{children:"Type"}),(0,n.jsx)(t.th,{children:"Description"})]})}),(0,n.jsxs)(t.tbody,{children:[(0,n.jsxs)(t.tr,{children:[(0,n.jsxs)(t.td,{children:[(0,n.jsx)("a",{id:"editable"})," ",(0,n.jsx)(t.code,{children:"editable?"})]}),(0,n.jsx)(t.td,{children:(0,n.jsx)(t.code,{children:"boolean"})}),(0,n.jsx)(t.td,{children:"If the metadata is editable for the user (only for the enum type)"})]}),(0,n.jsxs)(t.tr,{children:[(0,n.jsxs)(t.td,{children:[(0,n.jsx)("a",{id:"in_export"})," ",(0,n.jsx)(t.code,{children:"in_export?"})]}),(0,n.jsx)(t.td,{children:(0,n.jsx)(t.code,{children:"boolean"})}),(0,n.jsx)(t.td,{children:"Is metadata visible in exports"})]}),(0,n.jsxs)(t.tr,{children:[(0,n.jsxs)(t.td,{children:[(0,n.jsx)("a",{id:"in_signup"})," ",(0,n.jsx)(t.code,{children:"in_signup?"})]}),(0,n.jsx)(t.td,{children:(0,n.jsx)(t.code,{children:"boolean"})}),(0,n.jsx)(t.td,{children:"Is the metadata visible in signup form"})]}),(0,n.jsxs)(t.tr,{children:[(0,n.jsxs)(t.td,{children:[(0,n.jsx)("a",{id:"label"})," ",(0,n.jsx)(t.code,{children:"label"})]}),(0,n.jsx)(t.td,{children:(0,n.jsx)(t.code,{children:"string"})}),(0,n.jsx)(t.td,{children:"The label of the metadata"})]}),(0,n.jsxs)(t.tr,{children:[(0,n.jsxs)(t.td,{children:[(0,n.jsx)("a",{id:"mandatory"})," ",(0,n.jsx)(t.code,{children:"mandatory?"})]}),(0,n.jsx)(t.td,{children:(0,n.jsx)(t.code,{children:"boolean"})}),(0,n.jsx)(t.td,{children:"Is the metadata mandatory for the user"})]}),(0,n.jsxs)(t.tr,{children:[(0,n.jsxs)(t.td,{children:[(0,n.jsx)("a",{id:"type"})," ",(0,n.jsx)(t.code,{children:"type?"})]}),(0,n.jsx)(t.td,{children:(0,n.jsx)(t.a,{href:"/docs/sdk/community-js/types/Reference/enumerations/SCMetadataTypeFieldType",children:(0,n.jsx)(t.code,{children:"SCMetadataTypeFieldType"})})}),(0,n.jsx)(t.td,{children:"Metadata type"})]}),(0,n.jsxs)(t.tr,{children:[(0,n.jsxs)(t.td,{children:[(0,n.jsx)("a",{id:"type_options"})," ",(0,n.jsx)(t.code,{children:"type_options?"})]}),(0,n.jsxs)(t.td,{children:[(0,n.jsx)(t.code,{children:"string"}),"[]"]}),(0,n.jsx)(t.td,{children:"Options for the enum type"})]}),(0,n.jsxs)(t.tr,{children:[(0,n.jsxs)(t.td,{children:[(0,n.jsx)("a",{id:"type_tagging"})," ",(0,n.jsx)(t.code,{children:"type_tagging?"})]}),(0,n.jsxs)(t.td,{children:[(0,n.jsx)(t.code,{children:"Record"}),"<",(0,n.jsx)(t.code,{children:"string"}),", ",(0,n.jsx)(t.code,{children:"number"}),"[]>"]}),(0,n.jsx)(t.td,{children:"The type tagging"})]})]})]})]})}function h(e={}){const{wrapper:t}={...(0,r.R)(),...e.components};return t?(0,n.jsx)(t,{...e,children:(0,n.jsx)(l,{...e})}):l(e)}}}]);