(self.webpackChunkdevelopers_doc=self.webpackChunkdevelopers_doc||[]).push([[6375],{41567:(e,t,n)=>{"use strict";n.d(t,{ZP:()=>L,Rx:()=>B,cM:()=>N,A9:()=>a.A9,h_:()=>a.h_,fc:()=>a.fc});var r=n(67294),o=n(14783),s=n(99626),a=n(26580),i=n(64101);const d=(0,o.ZV)({chunked:!0,chunkSize:5242880,retries:0,parallel:1});let c=null;const l=(c=null,(0,o.Ym)()&&"Blob"in window&&(c=Blob.prototype.slice||Blob.prototype.webkitSlice||Blob.prototype.mozSlice),!!c);class u extends Error{constructor(e){super(e),this.name="ChunkedSendError"}}const p=(e,t,n=0)=>{const{chunkSize:r}=t,o=n?e.file.size-n:e.file.size;if(o<=0)throw new u(`start byte ${n} is invalid. File size: ${e.file.size}`);const s=o<=r?1:Math.ceil(o/r);return new Array(s).fill(null).map(((t,o)=>{const s=r*o+(n||0);return{id:`${e.id}_chunk-${o}`,start:s,end:Math.min(s+r,e.file.size),data:null,attempt:0,uploaded:0,index:o}}))};var h=n(11618);const g=(0,o.ZV)({CHUNK_START:"CHUNK_START",CHUNK_FINISH:"CHUNK_FINISH"}),f=(e,t,n,r,s,a)=>(e.updateState((e=>{e.requests[n]={id:n,abort:r.abort}})),r.request.then((r=>{o.kg.debugLog(`chunkedSender: request finished for chunk: ${n} - `,r),e.updateState((e=>{delete e.requests[n]}));const i=e.getState().chunks,d=i.findIndex((e=>e.id===n));if(~d){if(r.state===o.FD.FINISHED){const n=i[d];e.updateState((e=>{e.chunks=e.chunks.slice(0,d).concat(e.chunks.slice(d+1))}));const c=n.end-n.start;a({loaded:c,total:t.file.size},[n]),s(g.CHUNK_FINISH,{chunk:(0,o.ei)(n,["id","start","end","index","attempt"]),item:(0,h.Wg)(t),uploadData:r})}else r.state!==o.FD.ABORTED&&e.updateState((e=>{e.chunks[d].attempt+=1,e.lastChunkErrorData={status:r.status,response:r.response}}));e.updateState((e=>{e.responses.push(r.response)}))}}))),b=e=>{const t=e.getState(),n=[],r=Object.keys(t.requests),o=t.parallel||1;for(let s=0;s<t.chunks.length&&r.length<o&&n.length<o;s++){const e=t.chunks[s];if(!r.includes(e.id)){if(e.attempt&&!(e.attempt<t.retries))throw new u("chunk failure");n.push(e)}}return n},m=(e,t,n)=>t&&`bytes ${e.start}-${e.start+t.size-1}/${n.file.size}`,E=(0,o.D8)({undefinedOverwrites:!0}),S=(e,t,n,r,s)=>{const a=t.getState(),d=(0,h.Wg)(a.sendOptions),c={...d,headers:{...d.headers,"Content-Range":m(e,e.data,n)}},l=(0,o.Yc)(e.data,e.id),u=t=>{r(t,[e])},p=a.chunks.indexOf(e);return(0,o.sc)(s,g.CHUNK_START,{item:(0,h.Wg)(n),chunk:(0,o.ei)(e,["id","start","end","index","attempt"]),chunkItem:{...l},sendOptions:c,url:a.url,chunkIndex:p,remainingCount:a.chunks.length,totalCount:a.chunkCount,onProgress:r}).then((e=>{const t=!1===e;return t&&o.kg.debugLog(`chunkedSender.sendChunk: received false from CHUNK_START handler - skipping chunk ${p}, item ${n.id}`),t?{request:Promise.resolve({state:o.FD.FINISHED,response:"skipping chunk as instructed by CHUNK_START handler",status:200}),abort:()=>!0,senderType:"chunk-skipped-sender"}:(0,i.ZP)([l],e?.url||a.url,E({},c,e?.sendOptions),u)}))},y=(e,t,n,r,s)=>{if(e.data||t.updateState((()=>{e.data=((e,t,n)=>{const r=c?.call(e,t,n,e.type);return r&&(r.name=e.name,r.lastModified=e.lastModified),r})(n.file,e.start,e.end)})),!e.data)throw new u("chunk failure - failed to slice");const a=t.getState().url;o.kg.debugLog(`chunkedSender.sendChunk: about to send chunk ${e.id} [${e.start}-${e.end}] to: ${a||""}`);const i=S(e,t,n,r,s);return{request:i.then((({request:e})=>e)),abort:()=>(i.then((({abort:e})=>e())),!0),senderType:"chunk-passthrough-sender"}},R=(e,t,n)=>{if(n instanceof u){const n=e.getState().lastChunkErrorData;t({state:o.FD.ERROR,response:{reason:"At least one chunk failed",chunkUploadResponse:n}})}else t({state:o.FD.ERROR,response:n.message})},O=(e,t,n,r)=>{e.updateState((e=>{e.finished=!0})),n({state:r,response:{results:e.getState().responses}})},v=(e,t,n,r,s,a)=>new Promise(((i,d)=>{try{const d=y(s,e,t,n,a);f(e,t,s.id,d,a,n).then((()=>{i(),((e,t,n)=>{const r=e.getState(),s=!r.chunks.length;return r.aborted?(o.kg.debugLog(`chunkedSender: chunked upload aborted for item: ${t.id}`),O(e,0,n,o.FD.ABORTED)):s&&!r.error&&(o.kg.debugLog(`chunkedSender: chunked upload finished for item: ${t.id}`,r.responses),O(e,0,n,o.FD.FINISHED)),s||r.error})(e,t,r)||A(e,t,n,r,a)}))}catch(c){d(c)}})),A=(e,t,n,r,o)=>{const s=e.getState();if(!s.finished&&!s.aborted){const i=Object.keys(s.requests).length;if(!i||s.parallel&&s.parallel>i){let s;try{s=b(e)}catch(a){R(e,r,a)}s&&s.forEach((s=>{v(e,t,n,r,s,o).catch((t=>{e.updateState((e=>{e.error=!0})),R(e,r,t)}))}))}}},I=A,k=(e,t,n,r)=>{e.updateState((e=>{e.uploaded[n]=Math.max(r,e.uploaded[n]||0)}));const o=e.getState(),s=Object.keys(o.uploaded).reduce(((e,t)=>e+o.uploaded[t]),o.startByte),a=t.file.size;return{loaded:Math.min(s,a),total:a}},T=(e,t,n,r)=>{const{state:o,update:s}=(0,h.ZP)({finished:!1,aborted:!1,error:!1,uploaded:{},requests:{},responses:[],chunkCount:e.length,startByte:n.startByte||0,lastChunkErrorData:null,chunks:e,url:t,sendOptions:n,...r});return{getState:()=>o,updateState:e=>{s(e)}}},D=(e,t,n,r)=>{const s=(r,o)=>{const s=k(e,t,o[0].id,r.loaded);n(s,[t])};return{sendPromise:new Promise((n=>{I(e,t,s,n,r)})),abort:()=>((e,t)=>{o.kg.debugLog(`chunkedSender: aborting chunked upload for item: ${t.id}`);const n=e.getState();return n.finished||n.aborted||(Object.keys(n.requests).forEach((e=>{o.kg.debugLog(`chunkedSender: aborting chunk: ${e}`),n.requests[e].abort()})),e.updateState((e=>{e.aborted=!0}))),n.aborted})(e,t)}},C=(e,t,n,r,s,a)=>{const i=p(e,t,r.startByte),d=T(i,n,r,t);o.kg.debugLog(`chunkedSender: created ${i.length} chunks for: ${e.file.name}`);const{sendPromise:c,abort:l}=D(d,e,s,a);return{request:c,abort:l,senderType:"rpldy-chunked-sender"}},w=(e,t)=>{const n=(e=>(0,o.TS)({},d,e))(e);return{send:(e,r,s,a)=>{let d;return!n.chunked||e.length>1||e[0].url||!e[0].file.size?(d=(0,i.ZP)(e,r,s,a),o.kg.debugLog("chunkedSender: sending items as normal, un-chunked requests")):(o.kg.debugLog("chunkedSender: sending file as a chunked request"),d=C(e[0],n,r,s,a,t)),d}}},P=e=>(t,n)=>{const r=w(e,n);return o.kg.debugLog("chunkedSenderEnhancer: Created chunked-sender instance with options: ",e),t.update({send:r.send}),t};function _(){return _=Object.assign?Object.assign.bind():function(e){for(var t=1;t<arguments.length;t++){var n=arguments[t];for(var r in n)Object.prototype.hasOwnProperty.call(n,r)&&(e[r]=n[r])}return e},_.apply(this,arguments)}(0,s.KE)(l||!(0,o.Ym)(),"This browser doesn't support chunking. Consider using @rpldy/uploady instead");const F=e=>{const{chunked:t,chunkSize:n,retries:o,parallel:s,...i}=e,d=(0,r.useMemo)((()=>l?((e,t)=>{const n=P(e);return t?(0,a.fZ)(n,t):n})({chunked:t,chunkSize:n,retries:o,parallel:s},e.enhancer):void 0),[e.enhancer,t,n,o,s]);return r.createElement(a.ZP,_({},i,{enhancer:d}))},N=(0,s.q5)(g.CHUNK_START,!1),B=(0,s.q5)(g.CHUNK_FINISH,!1),L=F},64101:(e,t,n)=>{"use strict";n.d(t,{ZP:()=>p});var r=n(14783);const o="rpldy-sender";class s extends Error{constructor(e){super(`${e} didn't receive upload URL`),this.name="MissingUrlError"}}const a=(e,t,...n)=>{"set"in e?e.set(t,...n):("delete"in e&&e.delete(t),e.append(t,...n))},i=(e,t)=>{const n=new FormData;return t.params&&Object.entries(t.params).forEach((([e,r])=>{(t.formDataAllowUndefined||void 0!==r)&&a(n,e,r)})),((e,t,n)=>{const o=1===t.length;t.forEach(((t,s)=>{const i=o?n.paramName:(0,r.mf)(n.formatGroupParamName)?n.formatGroupParamName(s,n.paramName):`${n.paramName}[${s}]`;t.file?a(e,i,t.file,t.file.name):t.url&&a(e,i,t.url)}))})(n,e,t),n},d=[200,201,202,203,204],c=(e,t,n,o,s)=>{let a;const d=s?.getRequestData?s.getRequestData(e,n):((e,t)=>{let n;if(t.sendWithFormData)r.kg.debugLog(`uploady.sender: sending ${e.length} item(s) as form data`),n=i(e,t);else{if(e.length>1)throw new Error(`XHR Sender - Request without form data can only contain 1 item. received ${e.length}`);const t=e[0];r.kg.debugLog(`uploady.sender: sending item ${t.id} as request body`),n=t.file||t.url}return n})(e,n),c=(s=t,i=d,c)=>{const l=(0,r.TS)({...(0,r.ei)(n,["method","headers","withCredentials"]),preSend:t=>{t.upload.onprogress=t=>{t.lengthComputable&&o&&o(t,e.slice())}}},c),u=(0,r.WY)(s,i,l);return a=u.xhr,u},l=s?.preRequestHandler?s.preRequestHandler(c,e,t,n,o,s):c();return{url:t,count:e.length,pXhr:l,getXhr:()=>a,aborted:!1}},l=(e,t,n)=>{let r=e;const o=t?.["content-type"];if(n.forceJsonResponse||o?.includes("json"))try{r=JSON.parse(e)}catch{}return r},u=(e,t)=>e.pXhr.then((e=>(r.kg.debugLog("uploady.sender: received upload response ",e),((e,t)=>{const n=t.isSuccessfulCall?t.isSuccessfulCall(e):d.includes(e.status);return(0,r.tI)(n)?n:Promise.resolve(n)})(e,t).then((n=>{const o=n?r.FD.FINISHED:r.FD.ERROR,s=e.status,a=(0,r.k7)(e);return{status:s,state:o,response:{data:t.formatServerResponse?.(e.response,s,a)??l(e.response,a,t),headers:a}}}))))).catch((t=>{let n,o;return e.aborted?(n=r.FD.ABORTED,o="aborted"):(r.kg.debugLog("uploady.sender: upload failed: ",t),n=r.FD.ERROR,o=t),{error:!0,state:n,response:o,status:0}})),p=(e=>(t,n,a,i)=>{if(!n)throw new s(o);r.kg.debugLog("uploady.sender: sending file: ",{items:t,url:n,options:a});const d=c(t,n,a,i,e);return{request:u(d,a),abort:()=>(e=>{let t=!1;const{aborted:n,getXhr:o}=e,s=o();return!n&&s&&s.readyState&&4!==s.readyState&&(r.kg.debugLog(`uploady.sender: cancelling request with ${e.count} items to: ${e.url}`),s.abort(),e.aborted=!0,t=!0),t})(d),senderType:o}})()},99626:(e,t,n)=>{"use strict";n.d(t,{$V:()=>k,q5:()=>b,KE:()=>v,zD:()=>A,A9:()=>S,h_:()=>E,UT:()=>y,J0:()=>m,fc:()=>R,LN:()=>T,uO:()=>h});var r=n(86945),o=n(67294),s=n(14783);const a=Symbol.for("_rpldy-version_"),i=()=>(0,s.Ym)()?window:globalThis||process,d=()=>i()[a],c="Uploady - Context. File input isn't available",l=(e,t)=>{let n,r,o=!1;t?n=t:s.kg.debugLog("Uploady context - didn't receive input field ref - waiting for external ref");const d=()=>n?.current,l=()=>{const e=d();(0,s.kG)(e,c),e.removeEventListener("change",l);const t=r;r=null,u(e.files,t)},u=(t,n)=>{e.add(t,n)};return i()[a]="1.8.0",{hasUploader:()=>!!e,getInternalFileInput:()=>(n&&(o=!0),n),setExternalFileInput:e=>{o=!0,n=e},getIsUsingExternalInput:()=>o,showFileUpload:e=>{const t=d();(0,s.kG)(t,c),r=e,t.removeEventListener("change",l),t.addEventListener("change",l),t.value="",t.click()},upload:u,processPending:t=>{e.upload(t)},clearPending:()=>{e.clearPending()},setOptions:t=>{e.update(t)},getOptions:()=>e.getOptions(),getExtension:t=>e.getExtension(t),abort:t=>{e.abort(t)},abortBatch:t=>{e.abortBatch(t)},on:(t,n)=>e.on(t,n),once:(t,n)=>e.once(t,n),off:(t,n)=>e.off(t,n)}},u=o.createContext(null),p=e=>((0,s.kG)(!(()=>{const e=d();return!!e&&"1.8.0"!==e})(),"Uploady - Valid UploadyContext not found.\nYou may be using packages of different Uploady versions. <Uploady> and all other packages using the context provider must be of the same version: %s",d()),(0,s.kG)(e&&e.hasUploader(),"Uploady - Valid UploadyContext not found. Make sure you render inside <Uploady>"),e),h=()=>p((0,o.useContext)(u)),g=(e,t)=>{const n=h(),{on:r,off:s}=n;(0,o.useEffect)((()=>(r(e,t),()=>{s(e,t)})),[e,t,r,s])},f=(e,t)=>(n,r)=>{const[a,i]=(0,o.useState)(null);let d=n,c=r;n&&!(0,s.mf)(n)&&(c=n,d=void 0);const l=(0,o.useCallback)(((e,...n)=>{c&&e.id!==c||(i(t(e,...n)),(0,s.mf)(d)&&d(e,...n))}),[d,c]);return g(e,l),a},b=(e,t=!0)=>(n,r)=>{const s=(0,o.useCallback)(((e,...o)=>!n||t&&r&&e.id!==r?void 0:n(e,...o)),[n,r]);g(e,s)},m=(b(r.tY.BATCH_ADD,!1),b(r.tY.BATCH_START),b(r.tY.BATCH_FINISH),b(r.tY.BATCH_CANCEL),b(r.tY.BATCH_ERROR),b(r.tY.BATCH_FINALIZE),b(r.tY.BATCH_ABORT),f(r.tY.BATCH_PROGRESS,(e=>({...e}))),b(r.tY.ITEM_START)),E=b(r.tY.ITEM_FINISH),S=(b(r.tY.ITEM_CANCEL),b(r.tY.ITEM_ERROR)),y=(b(r.tY.ITEM_ABORT),b(r.tY.ITEM_FINALIZE),f(r.tY.ITEM_PROGRESS,(e=>({...e})))),R=b(r.tY.REQUEST_PRE_SEND,!1),O=(b(r.tY.ALL_ABORT,!1),Symbol.for("rpldy_component")),v=(e,t)=>{(0,s.yv)()||e||console.warn(t)},A=e=>{e[O]=!0},I=(e,t)=>{const n=(0,o.useMemo)((()=>(s.kg.debugLog("Uploady creating a new uploader instance",e),(0,r.ZP)(e))),[e.enhancer]);return n.update(e),(0,o.useEffect)((()=>(t&&(s.kg.debugLog("Uploady setting event listeners",t),Object.entries(t).forEach((([e,t])=>{n.on(e,t)}))),()=>{t&&(s.kg.debugLog("Uploady removing event listeners",t),Object.entries(t).forEach((([e,t])=>n.off(e,t))))})),[t,n]),n},k=e=>{const{listeners:t,debug:n,children:r,inputRef:a,...i}=e;s.kg.setDebug(!!n),s.kg.debugLog("@@@@@@ Uploady Rendering @@@@@@",e);const d=I(i,t),c=(0,o.useMemo)((()=>l(d,a)),[d,a]);return o.createElement(u.Provider,{value:c},r)},T=e=>{const t=h();return e&&t.setOptions(e),t.getOptions()};function D(){return D=Object.assign?Object.assign.bind():function(e){for(var t=1;t<arguments.length;t++){var n=arguments[t];for(var r in n)Object.prototype.hasOwnProperty.call(n,r)&&(e[r]=n[r])}return e},D.apply(this,arguments)}const C=({eventType:e,getIsValidEventData:t,getRequestData:n})=>r=>s=>{const a=h(),[i,d]=(0,o.useState)({updateRequest:null,requestData:null}),{id:c}=s;return(0,o.useLayoutEffect)((()=>{const r=(...o)=>!0===t(c,...o)?new Promise((t=>{d({updateRequest:n=>{a.off(e,r),t(n)},requestData:n(...o)})})):void 0;return c&&a.on(e,r),()=>{c&&a.off(e,r)}}),[a,c]),o.createElement(r,D({},s,i))};C({eventType:r.tY.REQUEST_PRE_SEND,getIsValidEventData:(e,{items:t})=>!!t.find((t=>t.id===e)),getRequestData:({items:e,options:t})=>({items:e,options:t})}),C({eventType:r.tY.BATCH_START,getIsValidEventData:(e,t)=>t.id===e,getRequestData:(e,t)=>({batch:e,items:e.items,options:t})})},14783:(e,t,n)=>{"use strict";n.d(t,{FG:()=>d,FD:()=>c,d9:()=>k,Yc:()=>U,ZV:()=>R,$e:()=>H,D8:()=>A,Ym:()=>l,kG:()=>s(),xb:()=>F,mf:()=>m(),PO:()=>O,yv:()=>y(),tI:()=>D,sQ:()=>E,kg:()=>r,TS:()=>I,k7:()=>x,ei:()=>T,WY:()=>j,nK:()=>_,P2:()=>a,tq:()=>f,sc:()=>N});var r={};n.r(r),n.d(r,{debugLog:()=>g,isDebugOn:()=>p,setDebug:()=>h});var o=n(41143),s=n.n(o),a=function(e,t,n){var r=null,o=null,s=n&&n.leading,a=n&&n.trailing;null==s&&(s=!0);null==a&&(a=!s);1==s&&(a=!1);var i=function(){r&&(clearTimeout(r),r=null)},d=function(){var n=s&&!r,i=this,d=arguments;if(o=function(){return e.apply(i,d)},r||(r=setTimeout((function(){if(r=null,a)return o()}),t)),n)return n=!1,o()};return d.cancel=i,d.flush=function(){var e=o;i(),e&&e()},d};const i="__rpldy-logger-debug__",d={PENDING:"pending",ADDED:"added",PROCESSING:"processing",UPLOADING:"uploading",CANCELLED:"cancelled",FINISHED:"finished",ABORTED:"aborted",ERROR:"error"},c={PENDING:"pending",ADDED:"added",UPLOADING:"uploading",CANCELLED:"cancelled",FINISHED:"finished",ERROR:"error",ABORTED:"aborted"},l=()=>"object"==typeof window&&!!window.document;let u=null;const p=()=>("boolean"!=typeof u&&(u=l()&&("location"in window&&!!~window.location.search.indexOf("rpldy_debug=true")||!0===window[i])),!!u),h=e=>{l()&&(window[i]=e),u=!!e||null},g=(...e)=>{p()&&console.log(...e)},f=(e,t,...n)=>{const r=(t,...n)=>new Promise(((r,o)=>{const s=e(t,...n);s&&s.length?Promise.all(s).catch(o).then((e=>e&&r(!!~e.findIndex((e=>!1===e))))):r(!1)}));return t?r(t,...n):r};var b=n(46916),m=n.n(b);const E=(e,t,n)=>{let r=!0;const o=(e=>{const t=[].concat(e);return e=>e.map((e=>t.map((t=>e[t])).join()))})(n);if(e&&t&&e.length===t.length){const n=o(e),s=o(t);r=!!n.find(((e,t)=>e!==s[t]))}return!r};var S=n(92884),y=n.n(S);const R=e=>y()()?e:Object.freeze(e),O=e=>!!e&&"object"==typeof e&&("Object"===Object.getPrototypeOf(e)?.constructor.name||null===Object.getPrototypeOf(e)),v=e=>O(e)||Array.isArray(e),A=(e={})=>{const t=(n,...r)=>(n&&r.length&&r.forEach((r=>{r&&((e,t)=>{const n=Object.keys(e);return t.withSymbols?n.concat(Object.getOwnPropertySymbols(e)):n})(r,e).forEach((o=>{const s=r[o];e.predicate&&!e.predicate(o,s)||(void 0!==s||e.undefinedOverwrites)&&(v(s)?(void 0!==n[o]&&O(n[o])||(n[o]=Array.isArray(s)?[]:{}),t(n[o],s)):n[o]=s)}))})),n);return t},I=A(),k=(e,t=I)=>v(e)?t(Array.isArray(e)?[]:{},e):e,T=(e,t)=>e&&Object.keys(e).reduce(((n,r)=>(~t.indexOf(r)&&(n[r]=e[r]),n)),{});const D=function(e){return!!e&&"object"==typeof e&&"function"==typeof e.then},C=l()&&window.requestIdleCallback,w=C?window.requestIdleCallback:setTimeout,P=C?window.cancelIdleCallback:clearTimeout,_=(e,t=0)=>{const n=w(e,C?{timeout:t}:t);return()=>P(n)};const F=function(e){return null==e},N=(e,t,...n)=>{const r=(t,...n)=>new Promise(((r,o)=>{const s=e(t,...n);s&&s.length?Promise.all(s).catch(o).then((e=>{let t;if(e)for(;F(t)&&e.length;)t=e.pop();r(F(t)?void 0:t)})):r()}));return t?r(t,...n):r},B=Symbol.for("__rpldy-bi__");let L=0;const H=e=>!("object"!=typeof e||!e.id||!e.batchId||!0!==e[B]),U=(e,t,n=!1)=>{const r=H(e);L+=r?0:1;let o={id:r&&e.id&&"string"==typeof e.id?e.id:`${t}.item-${L}`,batchId:t,state:n?c.PENDING:c.ADDED,uploadStatus:0,total:0,completed:0,loaded:0,recycled:r,previousBatch:r?e.batchId:null};Object.defineProperty(o,B,{value:!0,writable:!0});const s=r?e.file||e.url:e;if("string"==typeof s)o=((e,t)=>(e.url=t,e))(o,s);else{if(!(e=>e&&(e instanceof File||e instanceof Blob||!("object"!=typeof e||!e.name||!e.type)))(s))throw new Error("Unknown type of file added: "+typeof s);o=((e,t)=>(e.file=t,e))(o,s)}return o};const G=class extends Promise{constructor(e,t){super(e),this.xhr=t}},x=e=>{let t;try{t=e.getAllResponseHeaders().trim().split(/[\r\n]+/).reduce(((e,t)=>{const[n,r]=t.split(": ");return e[n]=r,e}),{})}catch(n){g("uploady.request: failed to read response headers",e)}return t},j=(e,t,n={})=>{const r=new XMLHttpRequest;return new G(((o,s)=>{r.onerror=()=>s(r),r.ontimeout=()=>s(r),r.onabort=()=>s(r),r.onload=()=>o(r),r.open(n?.method||"GET",e),((e,t)=>{t&&Object.keys(t).forEach((n=>{void 0!==t[n]&&e.setRequestHeader(n,t[n])}))})(r,n?.headers),r.withCredentials=!!n?.withCredentials,n?.preSend?.(r),r.send(t)}),r)}},46916:e=>{e.exports=function(e){return"function"==typeof e}},92884:e=>{e.exports=function(){return!0}},11618:(e,t,n)=>{"use strict";n.d(t,{ZP:()=>h,$N:()=>i,X3:()=>a,Wg:()=>p});var r=n(14783);const o=Symbol.for("__rpldy-sstt-proxy__"),s=Symbol.for("__rpldy-sstt-state__"),a=e=>!(0,r.yv)()&&!!e&&!!~Object.getOwnPropertySymbols(e).indexOf(o),i=e=>Array.isArray(e)||(0,r.PO)(e)&&!(e=>(0,r.Ym)()&&e instanceof File||e.name&&e.size&&e.uri)(e),d=(0,r.D8)({withSymbols:!0,predicate:e=>e!==o&&e!==s}),c=e=>!!(0,r.yv)()||e[s].isUpdateable,l=(e,t)=>{(0,r.yv)()||(e[s].isUpdateable=t)},u=(e,t)=>{let n;return i(e)&&(a(e)||(e[o]=!0,n=new Proxy(e,t)),Object.keys(e).forEach((n=>{e[n]=u(e[n],t)}))),n||e},p=e=>a(e)?(0,r.d9)(e,d):e,h=e=>{const t={set:(e,r,o)=>(c(n)&&(e[r]=u(o,t)),!0),get:(e,t)=>t===o?p(e):e[t],defineProperty:()=>{throw new Error("Simple State doesnt support defining property")},setPrototypeOf:()=>{throw new Error("Simple State doesnt support setting prototype")},deleteProperty:(e,t)=>(c(n)&&delete e[t],!0)};(0,r.yv)()||a(e)||Object.defineProperty(e,s,{value:{isUpdateable:!1},configurable:!0});const n=(0,r.yv)()?e:u(e,t);return{state:n,update:e=>{if(!(0,r.yv)()&&c(n))throw new Error("Can't call update on State already being updated!");try{l(n,!0),e(n)}finally{l(n,!1)}return n},unwrap:e=>e?p(e):a(n)?p(n):n}}},50635:(e,t,n)=>{"use strict";n.d(t,{xR:()=>a});var r=n(67294),o=n(99626);function s(){return s=Object.assign?Object.assign.bind():function(e){for(var t=1;t<arguments.length;t++){var n=arguments[t];for(var r in n)Object.prototype.hasOwnProperty.call(n,r)&&(e[r]=n[r])}return e},s.apply(this,arguments)}const a=e=>{const t=(t,n)=>{const{showFileUpload:a}=(0,o.uO)(),{id:i,className:d,text:c,children:l,extraProps:u,onClick:p,...h}=t,g=(0,r.useRef)();g.current=h;const f=(0,r.useCallback)((e=>{a(g.current),p?.(e)}),[a,g,p]);return r.createElement(e,s({ref:n,onClick:f,id:i,className:d,children:l||c||"Upload"},u))};return(0,o.zD)(t),(0,r.forwardRef)(t)};function i(){return i=Object.assign?Object.assign.bind():function(e){for(var t=1;t<arguments.length;t++){var n=arguments[t];for(var r in n)Object.prototype.hasOwnProperty.call(n,r)&&(e[r]=n[r])}return e},i.apply(this,arguments)}a((0,r.forwardRef)(((e,t)=>r.createElement("button",i({ref:t},e)))))},86945:(e,t,n)=>{"use strict";n.d(t,{tY:()=>C,fZ:()=>ve,ZP:()=>De});var r=n(14783);const o=(0,r.ZV)({allowRegisterNonExistent:!0,canAddEvents:!0,canRemoveEvents:!0,collectStats:!1}),s=Symbol.for("__le__"),a=Symbol.for("__le__pack__"),i=e=>e?e[s]:null,d=e=>{const t=i(e);if(!t)throw new Error("Didnt find LE internal object. Something very bad happened!");return t},c=(e,t,n,o=!1)=>{((e,t)=>{if(!(0,r.mf)(e))throw new Error(`'${t}' is not a valid function`)})(n,"cb");const s=d(e);if(!s.options.allowRegisterNonExistent&&!~s.events.indexOf(t))throw new Error(`Cannot register for event ${t.toString()} that wasn't already defined (allowRegisterNonExistent = false)`);const a=s.registry[t]||[];return a.find((e=>e.cb===n))||(a.push({name:t,cb:n,once:o}),s.registry[t]=a),()=>b.call(e,t,n)},l=(e,t)=>{const n=d(e).registry;return t?n[t]?n[t].slice():[]:Object.values(n).flat()},u={on:function(e,t){return c(this,e,t)},once:function(e,t){return c(this,e,t,!0)},off:b,getEvents:function(){return d(this).events.slice()}},p={trigger:function(e,...t){const n=l(this,e);let o;if(n.length){let s;1===t.length&&!0===t[0]?.[a]&&(s=t[0].resolve()),o=n.map((n=>{let r;return n.once&&f(this,e,n.cb),r=s?n.cb(...s):t.length?1===t.length?n.cb(t[0]):2===t.length?n.cb(t[0],t[1]):3===t.length?n.cb(t[0],t[1],t[2]):n.cb(...t):n.cb(),r})).filter((e=>!(void 0===e))).map((e=>(0,r.tI)(e)?e:Promise.resolve(e)))}return o&&(o.length?o:void 0)},addEvent:function(e){const t=d(this);if(!t.options.canAddEvents)throw new Error("Cannot add new events (canAddEvents = false)");if(~t.events.indexOf(e))throw new Error(`Event '${e}' already defined`);t.events.push(e)},removeEvent:function(e){const t=d(this);if(!t.options.canRemoveEvents)throw new Error("Cannot remove events (canRemoveEvents = false)");{const n=t.events.indexOf(e);t.events.splice(n,1)}},hasEvent:function(e){return!!~d(this).events.indexOf(e)},hasEventRegistrations:function(e){return!!l(this,e).length},assign:function(e){const t=d(this);return m(e,t.options,t.events,t.registry,t.stats),h(e)}},h=e=>Object.keys(p).reduce(((t,n)=>(t[n]=p[n].bind(e),t)),{target:e,...p}),g=(e,t,n=!1)=>{const r=d(e).registry;!r[t]||!n&&r[t].length||delete r[t]},f=(e,t,n)=>{const r=d(e).registry;r[t]&&(n?(r[t]=r[t].filter((e=>e.cb!==n)),g(e,t)):g(e,t,!0))};function b(e,t){f(this,e,t)}const m=(e,t,n=[],r={},o={})=>{Object.defineProperties(e,{[s]:{value:Object.seal({registry:r,events:n,options:t,stats:o})},...Object.entries(u).reduce(((e,[t,n])=>(e[t]={value:n},e)),{})})},E=(e,t=[],n)=>{const r=e||{},s={...o,...n};return i(r)||m(r,s,t),h(r)},S=e=>{const t={resolve:()=>[].concat(e())};return Object.defineProperty(t,a,{value:!0,configurable:!1}),t},y=(e,t,n)=>(r.kg.debugLog(`abort: aborting ${e.state} item  - `,e),n(e.id,{status:0,state:r.FD.ABORTED,response:"aborted"}),!0),R={[r.FD.UPLOADING]:(e,t)=>(r.kg.debugLog("abort: aborting uploading item  - ",e),t[e.id]()),[r.FD.ADDED]:y,[r.FD.PENDING]:y},O=(e,t,n)=>{const r=e?.state,o=!!r&&R[r];return!!o&&o(e,t,n)},v=(e,t,n,r)=>O(t[e],n,r),A=(e,t)=>{let n=!1;return 0!==t&&t&&(n=e>=t),n},I=(e,t,n,o,s)=>{const a=Object.values(n).flat(),i=A(a.length,s.fastAbortThreshold);return r.kg.debugLog(`abort: doing abort-all (${i?"fast":"normal"} abort)`),i?(e=>{Object.values(e).forEach((e=>e()))})(t):a.forEach((n=>v(n,e,t,o))),{isFast:i}},k=(e,t,n,o,s,a)=>{const i=0===t.fastAbortThreshold?0:t.fastAbortThreshold||a.fastAbortThreshold,d=A(o[e.id].length,i);return r.kg.debugLog(`abort: doing abort-batch on: ${e.id} (${d?"fast":"normal"} abort)`),d?((e,t)=>{e.items.forEach((({id:e})=>t[e]?.()))})(e,n):e.items.forEach((e=>O(e,n,s))),{isFast:d}},T=()=>e=>(e.update({abortAll:I,abortBatch:k,abortItem:v}),e),D=T,C=(0,r.ZV)({BATCH_ADD:"BATCH-ADD",BATCH_START:"BATCH-START",BATCH_PROGRESS:"BATCH_PROGRESS",BATCH_FINISH:"BATCH-FINISH",BATCH_ABORT:"BATCH-ABORT",BATCH_CANCEL:"BATCH-CANCEL",BATCH_ERROR:"BATCH-ERROR",BATCH_FINALIZE:"BATCH-FINALIZE",ITEM_START:"FILE-START",ITEM_CANCEL:"FILE-CANCEL",ITEM_PROGRESS:"FILE-PROGRESS",ITEM_FINISH:"FILE-FINISH",ITEM_ABORT:"FILE-ABORT",ITEM_ERROR:"FILE-ERROR",ITEM_FINALIZE:"FILE-FINALIZE",REQUEST_PRE_SEND:"REQUEST_PRE_SEND",ALL_ABORT:"ALL_ABORT"}),w=(0,r.ZV)({ITEM_PROGRESS:"ITEM_PROGRESS",BATCH_PROGRESS:"BATCH_PROGRESS"}),P=[r.FD.FINISHED,r.FD.ERROR,r.FD.CANCELLED,r.FD.ABORTED];var _=n(11618);const F=(e,t,n=!1)=>{e.updateState((e=>{const{batchId:r}=e.items[t]||{batchId:null};n&&delete e.items[t];const o=r?e.itemQueue[r].indexOf(t):-1;~o&&r&&e.itemQueue[r].splice(o,1);const s=e.activeIds.indexOf(t);~s&&e.activeIds.splice(s,1)}))},N=(e,t)=>!!e.getState().items[t],B=e=>P.includes(e.state),L=(0,r.D8)({undefinedOverwrites:!0}),H=(e,t,n,o,s,a)=>(0,r.sc)(e.trigger,s,t,o).then((e=>(a?.(e),((e,t,n,o)=>{let s=n,a=t;if(o){if(r.kg.debugLog(`uploader.queue: REQUEST_PRE_SEND(${e}) event returned updated items/options`,o),o.items){if(o.items.length!==t.length||!(0,r.sQ)(o.items,t,["id","batchId","recycled"]))throw new Error(`REQUEST_PRE_SEND(${e}) event handlers must return same items with same ids`);a=o.items}o.options&&(s=L({},n,o.options))}return{items:a,options:s,cancelled:!1===o}})(s,n,o,e)))),U=(e,t,n,r,o,s)=>{const a=n(t),i=e.getState().batches[a[0].batchId].batchOptions,d=r?.(t,i)||t;return H(e,d,a,i,s,o).then((t=>(t.cancelled||((e,t)=>{if(t.items[0]&&e.getState().batches[t.items[0].batchId]){e.updateState((e=>{t.items.forEach((t=>{B(e.items[t.id])||(e.items[t.id]=t)})),e.batches[t.items[0].batchId].batchOptions=t.options}));const n=e.getState();t.items=t.items.map((e=>n.items[e.id])),t.options=n.batches[t.items[0].batchId].batchOptions}})(e,t),t)))},G=(e,t,n=null,r=null)=>(o,s)=>U(o,s,t,n,r,e),x=G(C.BATCH_START,(e=>e.items),null,(({batch:e}={batch:!1})=>{if(e)throw new Error("BATCH_START event handlers cannot update batch data. Only items & options")})),j=[r.FG.ADDED,r.FG.PROCESSING,r.FG.UPLOADING],$=[r.FG.ABORTED,r.FG.CANCELLED,r.FG.FINISHED,r.FG.ERROR],q=(e,t)=>e.batches[t].batch,M=(e,t)=>{const n=e.getState(),r=n.items[t];return n.batches[r.batchId]},Z=(e,t)=>M(e,t).batch,Y=(e,t)=>{const n=((e,t)=>q(e.getState(),t))(e,t);n.items.forEach((({id:t})=>F(e,t,!0)))},Q=(e,t)=>{e.updateState((e=>{delete e.batches[t],delete e.itemQueue[t];const n=e.batchQueue.indexOf(t);~n&&e.batchQueue.splice(n,1);const r=e.batchesStartPending.indexOf(t);~r&&e.batchesStartPending.splice(r,1)}))},z=(e,t,n,o=r.FG.FINISHED,s)=>{e.updateState((e=>{const n=q(e,t);n.state=o,s&&(n.additionalInfo=s)})),V(e,t,n),V(e,t,C.BATCH_FINALIZE)},K=(e,t)=>{r.kg.debugLog("uploady.uploader.batchHelpers: cancelling batch: ",t),z(e,t,C.BATCH_CANCEL,r.FG.CANCELLED),Y(e,t),Q(e,t)},V=(e,t,n)=>{const r=e.getState(),{batch:o,batchOptions:s}=r.batches[t],a=r.items,i={...(0,_.Wg)(o),items:o.items.map((({id:e})=>(0,_.Wg)(a[e])))};e.trigger(n,i,(0,_.Wg)(s))},W=(e,t)=>{const n=q(e.getState(),t);return j.includes(n.state)},J=e=>$.includes(e.state),X={[r.FD.PENDING]:null,[r.FD.ADDED]:C.ITEM_START,[r.FD.FINISHED]:C.ITEM_FINISH,[r.FD.ERROR]:C.ITEM_ERROR,[r.FD.CANCELLED]:C.ITEM_CANCEL,[r.FD.ABORTED]:C.ITEM_ABORT,[r.FD.UPLOADING]:C.ITEM_PROGRESS},ee=e=>!!~P.indexOf(e.state),te=(e,t,n)=>{t.forEach((t=>{const n=e.getState(),{id:o,info:s}=t;if(r.kg.debugLog("uploader.processor.queue: request finished for item - ",{id:o,info:s}),n.items[o]){e.updateState((e=>{const t=e.items[o];t.state=s.state,t.uploadResponse=s.response,t.uploadStatus=s.status,ee(t)&&delete e.aborts[o]}));const t=e.getState().items[o];if(s.state===r.FD.FINISHED&&t.completed<100){const n=t.file?.size||0;e.handleItemProgress(t,100,n,n)}const{batchOptions:n}=M(e,o);X[t.state]&&e.trigger(X[t.state],t,n),ee(t)&&(((e,t)=>{e.updateState((e=>{e.batches[t].finishedCounter+=1}))})(e,t.batchId),e.trigger(C.ITEM_FINALIZE,t,n))}F(e,o)})),(e=>{(0,r.nK)((()=>{const t=e.getState();Object.keys(t.batches).forEach((n=>{const{batch:o,finishedCounter:s}=t.batches[n],{orgItemCount:a}=o,i=J(o);a===s&&(i||100===o.completed||(e.updateState((e=>{const t=q(e,n);t.completed=100,t.loaded=t.items.reduce(((e,{loaded:t})=>e+t),0)})),V(e,n,C.BATCH_PROGRESS)),e.updateState((e=>{e.currentBatch===n&&(e.currentBatch=null)})),r.kg.debugLog(`uploady.uploader.batchHelpers: cleaning up batch: ${o.id}`),i||z(e,n,C.BATCH_FINISH),Y(e,n),Q(e,n))}))}))})(e),n(e)},ne=G(C.REQUEST_PRE_SEND,(e=>e),((e,t)=>({items:e,options:t}))),re=(e,t,n)=>{const{items:o,options:s}=t,a=e.getState().batches[o[0].batchId]?.batch;if(a){let t;try{t=e.sender.send(o,a,s)}catch(i){r.kg.debugLog("uploader.queue: sender failed with unexpected error",i),t={request:Promise.resolve({status:0,state:r.FD.ERROR,response:i.message}),abort:()=>!1,senderType:"exception-handler"}}const{request:d}=t;((e,t,n)=>{e.updateState((e=>{t.forEach((t=>{e.items[t.id].state=r.FD.UPLOADING,e.aborts[t.id]=n.abort}))}))})(e,o,t),d.then((t=>{const r=o.map((e=>({id:e.id,info:t})));te(e,r,n)}))}},oe=({allowedItems:e,cancelledResults:t,queue:n,items:o,ids:s,next:a})=>{const i=e.length?ne(n,e):Promise.resolve();let d=t;return i.catch((e=>{r.kg.debugLog("uploader.queue: encountered error while preparing items for request",e),((e,t,n,o)=>{const s=n.map((({id:t})=>({id:t,info:{status:0,state:r.FD.ERROR,response:e}})));te(t,s,o)})(e,n,o,a)})).then((e=>{let t;if(e)if(e.cancelled)d=s.map((()=>!0));else{e.items.some((e=>B(e)))?r.kg.debugLog("uploader.queue: send data contains aborted items - not sending"):re(n,{items:e.items,options:e.options},a)}return((e,t,n,o)=>{const s=n.map(((e,n)=>e?t[n].id:null)).filter(Boolean);if(s.length){const t=s.map((e=>({id:e,info:{status:0,state:r.FD.CANCELLED,response:"cancel"}})));te(e,t,o)}return!!s.length})(n,o,d,a)||(t=a(n)),t}))},se=(e,t,n)=>{const r=e.getState();let o=Object.values(r.items);return o=o.filter((e=>t.includes(e.id)&&!B(e))),Promise.all(o.map((t=>{const{batchOptions:n}=M(e,t.id);return e.runCancellable(C.ITEM_START,t,n)}))).then((r=>{let s=r.map(((t,n)=>t?null:((e,t)=>{const n=t.getState().items[e];return n&&!B(n)?n:void 0})(o[n].id,e))).filter(Boolean);return{allowedItems:s,cancelledResults:r,queue:e,items:o,ids:t,next:n}})).then(oe)},ae=(e,t)=>e.getState().activeIds.flat().includes(t),ie=e=>{const t=e.getState(),n=t.itemQueue,[o,s]=(e=>{const t=e.getState(),n=t.itemQueue,o=t.items;let s=null,a=0,i=0,d=t.batchQueue[a];for(;d&&!s;){if(W(e,d))for(s=n[d][i];s&&(ae(e,s)||o[s].state!==r.FD.ADDED);)i+=1,s=n[d][i];s||(a+=1,d=t.batchQueue[a],i=0)}return s?[d,i]:null})(e)||[];let a,i=o&&~s?n[o][s]:null;if(i){const{batchOptions:e}=t.batches[o],n=e.maxGroupSize||0;if(e.grouped&&n>1){a=t.itemQueue[o].slice(s,s+n)}else a=[i]}return a},de=(e,t)=>{let n;return((e,t)=>{const n=Z(e,t);return e.getState().batchesStartPending.includes(n.id)})(e,t[0])?n=Promise.resolve(!0):(((e,t)=>{e.updateState((e=>{e.activeIds=e.activeIds.concat(t)}))})(e,t),n=((e,t)=>{const n=Z(e,t);return e.getState().currentBatch!==n.id})(e,t[0])?((e,t)=>{const n=Z(e,t);return e.updateState((e=>{e.batchesStartPending.push(n.id)})),x(e,n).then((({cancelled:r})=>{let o=!1;return e.updateState((e=>{const t=e.batchesStartPending.indexOf(n.id);e.batchesStartPending.splice(t,1)})),r||(o=!N(e,t),o||e.updateState((e=>{e.currentBatch=n.id}))),!r&&!o}))})(e,t[0]).then((n=>{let o=!n;return o&&(((e,t)=>{if(N(e,t)){const n=M(e,t),o=n?.batch.id;o?K(e,o):r.kg.debugLog(`uploady.uploader.batchHelpers: cancel batch called for batch already removed (item id = ${t})`)}})(e,t[0]),ce(e)),o})).catch((n=>(r.kg.debugLog("uploader.processor: encountered error while preparing batch for request",n),((e,t,n)=>{const o=Z(e,t),s=o.id;r.kg.debugLog("uploady.uploader.batchHelpers: failing batch: ",{batch:o}),z(e,s,C.BATCH_ERROR,r.FG.ERROR,n.message),Y(e,s),Q(e,s)})(e,t[0],n),ce(e),!0))):Promise.resolve(!1)),n},ce=e=>{let t;const n=ie(e);if(n){const o=e.getCurrentActiveCount(),{concurrent:s=!1,maxConcurrent:a=0}=e.getOptions();(!o||s&&o<a)&&(r.kg.debugLog("uploader.processor: Processing next upload - ",{ids:n,currentCount:o}),t=de(e,n).then((t=>{t||(se(e,n,ce),s&&ce(e))})))}return t},le=ce,ue=e=>(t,n)=>te(e,[{id:t,info:n}],le),pe=(e,t,n,o,s)=>{const{state:a,update:i}=(0,_.ZP)({itemQueue:{},batchQueue:[],currentBatch:null,batchesStartPending:[],batches:{},items:{},activeIds:[],aborts:{}}),d=()=>a,c=e=>{i(e)},l=e=>{if(a.items[e.id]&&!e.recycled)throw new Error(`Uploader queue conflict - item ${e.id} already exists`);e.recycled&&((e,t)=>{const{previousBatch:n}=t;if(t.recycled&&n&&e.getState().batches[n]){const{id:r}=Z(e,t.id);r===n&&e.updateState((e=>{const n=q(e,r),o=n.items.findIndex((({id:e})=>e===t.id));~o&&n.items.splice(o,1)}))}})(p,e),c((t=>{t.items[e.id]=e}))},u=(e,n,r,o)=>{a.items[e.id]&&(c((t=>{const s=t.items[e.id];s.loaded=r,s.completed=n,s.total=o})),t(C.ITEM_PROGRESS,d().items[e.id]))};o.on(w.ITEM_PROGRESS,u),o.on(w.BATCH_PROGRESS,(e=>{const t=a.batches[e.id]?.batch.items;if(t){const[n,r]=t.reduce(((e,{id:t})=>{const{loaded:n,file:r}=a.items[t],o=r?.size||n||1;return e[0]+=n,e[1]+=o,e}),[0,0]);c((t=>{const o=t.batches[e.id].batch;o.total=r,o.loaded=n,o.completed=n/r})),V(p,e.id,C.BATCH_PROGRESS)}}));const p={uploaderId:s,getOptions:()=>e,getCurrentActiveCount:()=>a.activeIds.length,getState:d,updateState:c,trigger:t,runCancellable:(e,...t)=>{if(!(0,r.mf)(n))throw new Error("Uploader queue - cancellable is of wrong type");return n(e,...t)},sender:o,handleItemProgress:u,clearAllUploads:()=>{p.updateState((e=>{e.itemQueue={},e.batchQueue=[],e.currentBatch=null,e.batches={},e.items={},e.activeIds=[]}))},clearBatchUploads:e=>{(0,r.nK)((()=>{r.kg.debugLog(`uploader.queue: started scheduled work to clear batch uploads (${e})`),d().batches[e]&&((e,t)=>{e.updateState((e=>{const{items:n}=q(e,t);delete e.batches[t],delete e.itemQueue[t];const r=e.batchQueue.indexOf(t);~r&&e.batchQueue.splice(r,1),e.currentBatch===t&&(e.currentBatch=null),n.forEach((({id:t})=>{delete e.items[t];const n=e.activeIds.indexOf(t);~n&&e.activeIds.splice(n,1)}))}))})(p,e)}))}};return(0,r.Ym)()&&r.kg.isDebugOn()&&(window[`__rpldy_${s}_queue_state`]=p),{updateState:c,getState:p.getState,runCancellable:p.runCancellable,uploadBatch:(e,t)=>{t&&c((n=>{n.batches[e.id].batchOptions=t})),le(p)},addBatch:(e,t)=>(c((n=>{n.batches[e.id]={batch:e,batchOptions:t,finishedCounter:0},n.batchQueue.push(e.id),n.itemQueue[e.id]=e.items.map((({id:e})=>e))})),e.items.forEach(l),q(a,e.id)),abortItem:(...e)=>((e,t)=>{const n=e.getOptions().abortItem;(0,r.kG)(!!n,"Abort Item method not provided yet abortItem was called");const o=e.getState();return n(t,o.items,o.aborts,ue(e))})(p,...e),abortBatch:(...e)=>((e,t)=>{const n=e.getOptions().abortBatch;(0,r.kG)(!!n,"Abort Batch method not provided yet abortItem was called");const o=e.getState(),s=o.batches[t],a=s?.batch;if(a&&!J(a)){z(e,t,C.BATCH_ABORT,r.FG.ABORTED);const{isFast:i}=n(a,s.batchOptions,o.aborts,o.itemQueue,ue(e),e.getOptions());i&&e.clearBatchUploads(a.id)}})(p,...e),abortAll:(...e)=>(e=>{const t=e.getOptions().abortAll;(0,r.kG)(!!t,"Abort All method not provided yet abortAll was called"),e.trigger(C.ALL_ABORT);const n=e.getState(),{isFast:o}=t(n.items,n.aborts,n.itemQueue,ue(e),e.getOptions());o&&e.clearAllUploads()})(p,...e),clearPendingBatches:()=>{(e=>{const t=e.getState().batches;Object.keys(t).filter((e=>t[e].batch.state===r.FG.PENDING)).forEach((t=>{Y(e,t),Q(e,t)}))})(p)},uploadPendingBatches:e=>{((e,t)=>{e.updateState((e=>{Object.keys(e.batches).forEach((n=>{const o=e.batches[n],{batch:s,batchOptions:a}=o;s.state===r.FG.PENDING&&(s.items.forEach((e=>{e.state=r.FD.ADDED})),s.state=r.FG.ADDED,o.batchOptions=(0,r.TS)({},a,t))}))}))})(p,e),le(p)},cancelBatch:e=>K(p,e.id)}};var he=n(64101);const ge=()=>!0,fe=(0,r.ZV)({autoUpload:!0,clearPendingOnAdd:!1,inputFieldName:"file",concurrent:!1,maxConcurrent:2,grouped:!1,maxGroupSize:5,method:"POST",params:{},fileFilter:ge,forceJsonResponse:!1,withCredentials:!1,destination:{},send:null,sendWithFormData:!0,formDataAllowUndefined:!1,fastAbortThreshold:100}),be=(e,t,n,o)=>{((e,t,n,o,s)=>{e.forEach((e=>{r.kg.debugLog(`uploady.uploader.processor: file: ${e.id} progress event: loaded(${n}) - completed(${t})`),s(w.ITEM_PROGRESS,e,t,n,o)}))})(e,Math.min(n.loaded/n.total*100,100)/e.length,n.loaded/e.length,n.total,o),o(w.BATCH_PROGRESS,t)},me=()=>{const{trigger:e,target:t}=E({send:(t,n,o)=>{const s=o.destination,a=s?.url,i=(0,r.P2)((r=>be(t,n,r,e)),50,!0);return((0,r.mf)(o.send)?o.send:he.ZP)(t,a,{method:s?.method||o.method||fe.method,paramName:s?.filesParamName||o.inputFieldName||"file",params:{...o.params,...s?.params},forceJsonResponse:o.forceJsonResponse,withCredentials:o.withCredentials,formatGroupParamName:o.formatGroupParamName,headers:s?.headers,sendWithFormData:o.sendWithFormData,formatServerResponse:o.formatServerResponse,formDataAllowUndefined:o.formDataAllowUndefined,isSuccessfulCall:o.isSuccessfulCall},i)}},Object.values(w));return t},Ee=(0,r.Ym)()&&"FileList"in window,Se=(e,t=0)=>{let n=e;return(0,r.yv)()||(t<3&&(0,_.X3)(e)?n=(0,_.Wg)(e):t<3&&(0,_.$N)(e)&&(n=Array.isArray(e)?e.map((e=>Se(e,t+1))):Object.keys(e).reduce(((n,r)=>(n[r]=Se(e[r],t+1),n)),{}))),n};let ye=0;const Re=(e,t,n)=>{ye+=1;const o=`batch-${ye}`,s=(e=>Ee&&e instanceof FileList||"[object FileList]"===e.toString())(e),a=Array.isArray(e)||s?e:[e],i=!n.autoUpload;return((e,t,n,o)=>{const s=o?Array.prototype.map.call(t,(e=>(0,r.$e)(e)?e.file||e.url:e)):[];return Promise.all(Array.prototype.map.call(t,((e,t)=>{const n=(o||ge)(s[t],t,s);return(0,r.tI)(n)?n.then((t=>!!t&&e)):!!n&&e}))).then((t=>t.filter(Boolean).map((t=>(0,r.Yc)(t,e,n)))))})(o,a,i,n.fileFilter).then((e=>({id:o,uploaderId:t,items:e,state:i?r.FG.PENDING:r.FG.ADDED,completed:0,loaded:0,orgItemCount:e.length,additionalInfo:null})))},Oe=(e,t,n,o)=>{const s=me(),a=pe(n,e,t,s,o);return{abortBatch:e=>{a.abortBatch(e)},abort:e=>{e?a.abortItem(e):a.abortAll()},addNewBatch:(e,t)=>Re(e,o,t).then((e=>{let n;if(e.items.length){const s=a.addBatch(e,t);n=a.runCancellable(C.BATCH_ADD,s,t).then((e=>(e?a.cancelBatch(s):(r.kg.debugLog(`uploady.uploader [${o}]: new items added - auto upload =\n                       ${String(t.autoUpload)}`,s.items),t.autoUpload&&a.uploadBatch(s)),s)))}else r.kg.debugLog(`uploady.uploader: no items to add. batch ${e.id} is empty. check fileFilter if this isn't intended`);return n||Promise.resolve(null)})),clearPendingBatches:()=>{a.clearPendingBatches()},processPendingBatches:e=>{a.uploadPendingBatches(e)}}},ve=(...e)=>(t,...n)=>e.reduce(((e,t)=>t(e,...n)||e),t),Ae=Object.values(C);let Ie=0;const ke=(e,t,n,r)=>{const o=t.enhancer?(s=t.enhancer,ve(D(),s)):D();var s;r(!0);const a=o(e,n);return r(!1),a||e},Te=e=>{Ie+=1;const t=`uploader-${Ie}`;let n=!1;const o={};r.kg.debugLog(`uploady.uploader: creating new instance (${t})`,{options:e,counter:Ie});let s=(e=>{return{...fe,...e,destination:e&&e.destination?(t=e.destination,{params:{},...t}):null};var t})(e);const a=()=>{p.clearPendingBatches()};let{trigger:i,target:d}=E({id:t,update:e=>(s=(0,r.TS)({},s,e),d),add:(e,t)=>{const n=(0,r.TS)({},s,t);return n.clearPendingOnAdd&&a(),p.addNewBatch(e,n).then((()=>{r.kg.debugLog("uploady.uploader: finished adding file data to be processed")}))},upload:e=>{p.processPendingBatches(e)},abort:e=>{p.abort(e)},abortBatch:e=>{p.abortBatch(e)},getOptions:()=>(0,r.d9)(s),clearPending:a,registerExtension:(e,t)=>{(0,r.kG)(n,"Uploady - uploader extensions can only be registered by enhancers"),(0,r.kG)(!o[e],"Uploady - uploader extension by this name [%s] already exists",e),r.kg.debugLog(`uploady.uploader: registering extension: ${e.toString()}`,t),o[e]=t},getExtension:e=>o[e]},Ae,{canAddEvents:!1,canRemoveEvents:!1});const c=(e,...t)=>{const n=S((()=>t.map(Se)));return i(e,n)},l=(0,r.tq)(c),u=ke(d,s,c,(e=>{n=e})),p=Oe(c,l,s,u.id);return(0,r.ZV)(u)},De=Te},26580:(e,t,n)=>{"use strict";n.d(t,{fZ:()=>u.fZ,ZP:()=>p,A9:()=>a.A9,h_:()=>a.h_,UT:()=>a.UT,J0:()=>a.J0,fc:()=>a.fc});var r=n(67294),o=n(73935),s=n(14783),a=n(99626);function i(){return i=Object.assign?Object.assign.bind():function(e){for(var t=1;t<arguments.length;t++){var n=arguments[t];for(var r in n)Object.prototype.hasOwnProperty.call(n,r)&&(e[r]=n[r])}return e},i.apply(this,arguments)}const d=(e,t,n)=>r.createElement("input",i({},e,{name:t.inputFieldName,type:"file",ref:n})),c=(0,r.memo)((0,r.forwardRef)((({container:e,noPortal:t,...n},r)=>{const i=(0,a.LN)(),c=e&&1===e.nodeType;return(0,s.kG)(c||!(0,s.Ym)(),"Uploady - Container for file input must be a valid dom element"),t?d(n,i,r):((e,t,n,r,s)=>e&&t?o.createPortal(d(n,r,s),e):null)(e,c,n,i,r)}))),l=e=>{const{multiple:t=!0,capture:n,accept:o,webkitdirectory:d,children:l,inputFieldContainer:u,customInput:p,fileInputId:h,noPortal:g=!1,...f}=e,b=p?null:u||((0,s.Ym)()?document.body:null),m=(0,r.useRef)();return r.createElement(a.$V,i({},f,{inputRef:m}),p?null:r.createElement(c,{container:b,multiple:t,capture:n,accept:o,webkitdirectory:d?.toString(),style:{display:"none"},ref:m,id:h,noPortal:g}),l)};var u=n(86945);const p=l},21459:(e,t,n)=>{"use strict";n.d(t,{Z:()=>r});const r=(0,n(54490).vU)({error:{id:"ui.common.error",defaultMessage:"ui.common.error"},urlError:{id:"ui.common.error.url",defaultMessage:"ui.common.error.url"},messageFileUploadError:{id:"ui.shared.messageChunkUploader.error",defaultMessage:"ui.shared.messageChunkUploader.error"},fileUploadErrorGeneric:{id:"ui.common.fileUpload.error",defaultMessage:"ui.common.fileUpload.error"}})},44465:(e,t,n)=>{"use strict";n.d(t,{Z:()=>g});var r=n(97582),o=n(67294),s=n(90948),a=n(5616),i=n(29628),d=n(94184),c=n.n(d);let l;"undefined"!=typeof window&&n.e(63048).then(n.bind(n,63048)).then((e=>{l=e.default}));const u="SCEmojiPicker",p={root:`${u}-root`},h=(0,s.ZP)(a.Z,{name:u,slot:"Root",overridesResolver:(e,t)=>t.root})((()=>({})));const g=function(e){const t=(0,i.Z)({props:e,name:u}),{className:n="",emojiStyle:s="native"}=t,a=(0,r._T)(t,["className","emojiStyle"]);return o.createElement(h,{className:c()(p.root,n)},l&&o.createElement(l,Object.assign({emojiStyle:s},a)))}}}]);