"use strict";(self.webpackChunkdevelopers_doc=self.webpackChunkdevelopers_doc||[]).push([[44793],{28903:(e,s,t)=>{t.r(s),t.d(s,{assets:()=>c,contentTitle:()=>d,default:()=>l,frontMatter:()=>a,metadata:()=>i,toc:()=>o});var n=t(85893),r=t(11151);const a={id:"types_embed.EmbedUpdateParams",title:"Interface: EmbedUpdateParams",sidebar_label:"EmbedUpdateParams",custom_edit_url:null},d=void 0,i={id:"sdk/community-js/api-services/API_Reference/interfaces/types_embed.EmbedUpdateParams",title:"Interface: EmbedUpdateParams",description:"types/embed.EmbedUpdateParams",source:"@site/docs/sdk/community-js/api-services/API_Reference/interfaces/types_embed.EmbedUpdateParams.md",sourceDirName:"sdk/community-js/api-services/API_Reference/interfaces",slug:"/sdk/community-js/api-services/API_Reference/interfaces/types_embed.EmbedUpdateParams",permalink:"/docs/sdk/community-js/api-services/API_Reference/interfaces/types_embed.EmbedUpdateParams",draft:!1,unlisted:!1,editUrl:null,tags:[],version:"current",frontMatter:{id:"types_embed.EmbedUpdateParams",title:"Interface: EmbedUpdateParams",sidebar_label:"EmbedUpdateParams",custom_edit_url:null},sidebar:"sdkSidebar",previous:{title:"EmbedSearchParams",permalink:"/docs/sdk/community-js/api-services/API_Reference/interfaces/types_embed.EmbedSearchParams"},next:{title:"FeatureParams",permalink:"/docs/sdk/community-js/api-services/API_Reference/interfaces/types_feature.FeatureParams"}},c={},o=[{value:"Properties",id:"properties",level:2},{value:"metadata",id:"metadata",level:3},{value:"Defined in",id:"defined-in",level:4},{value:"url",id:"url",level:3},{value:"Defined in",id:"defined-in-1",level:4}];function m(e){const s={a:"a",code:"code",h2:"h2",h3:"h3",h4:"h4",hr:"hr",p:"p",strong:"strong",...(0,r.a)(),...e.components};return(0,n.jsxs)(n.Fragment,{children:[(0,n.jsxs)(s.p,{children:[(0,n.jsx)(s.a,{href:"/docs/sdk/community-js/api-services/API_Reference/modules/types_embed",children:"types/embed"}),".EmbedUpdateParams"]}),"\n",(0,n.jsx)(s.p,{children:"EmbedUpdateParams interface"}),"\n",(0,n.jsx)(s.h2,{id:"properties",children:"Properties"}),"\n",(0,n.jsx)(s.h3,{id:"metadata",children:"metadata"}),"\n",(0,n.jsxs)(s.p,{children:["\u2022 ",(0,n.jsx)(s.strong,{children:"metadata"}),": ",(0,n.jsx)(s.code,{children:"Record"}),"<",(0,n.jsx)(s.code,{children:"string"}),", ",(0,n.jsx)(s.code,{children:"any"}),">"]}),"\n",(0,n.jsx)(s.p,{children:"Metadata associated to this embed. It mus be a valid json object.\nFor embed_type sc_vimeo or sc_link it contains metadata associated\nwith the external resource. For embed_type sc_shared_object it contains a field\ntype that is the type of the object (Discussion or Post) and a field id\nthat contains the id of the object shared"}),"\n",(0,n.jsx)(s.h4,{id:"defined-in",children:"Defined in"}),"\n",(0,n.jsx)(s.p,{children:(0,n.jsx)(s.a,{href:"https://github.com/selfcommunity/community-js/blob/6572d63/packages/api-services/src/types/embed.ts#L20",children:"types/embed.ts:20"})}),"\n",(0,n.jsx)(s.hr,{}),"\n",(0,n.jsx)(s.h3,{id:"url",children:"url"}),"\n",(0,n.jsxs)(s.p,{children:["\u2022 ",(0,n.jsx)(s.code,{children:"Optional"})," ",(0,n.jsx)(s.strong,{children:"url"}),": ",(0,n.jsx)(s.code,{children:"string"})]}),"\n",(0,n.jsx)(s.p,{children:"Url for the resource, if any"}),"\n",(0,n.jsx)(s.h4,{id:"defined-in-1",children:"Defined in"}),"\n",(0,n.jsx)(s.p,{children:(0,n.jsx)(s.a,{href:"https://github.com/selfcommunity/community-js/blob/6572d63/packages/api-services/src/types/embed.ts#L11",children:"types/embed.ts:11"})})]})}function l(e={}){const{wrapper:s}={...(0,r.a)(),...e.components};return s?(0,n.jsx)(s,{...e,children:(0,n.jsx)(m,{...e})}):m(e)}},11151:(e,s,t)=>{t.d(s,{Z:()=>i,a:()=>d});var n=t(67294);const r={},a=n.createContext(r);function d(e){const s=n.useContext(a);return n.useMemo((function(){return"function"==typeof e?e(s):{...s,...e}}),[s,e])}function i(e){let s;return s=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:d(e.components),n.createElement(a.Provider,{value:s},e.children)}}}]);