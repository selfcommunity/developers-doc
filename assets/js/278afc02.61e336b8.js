"use strict";(self.webpackChunkdevelopers_doc=self.webpackChunkdevelopers_doc||[]).push([[7620],{28453:(e,t,s)=>{s.d(t,{R:()=>r,x:()=>o});var i=s(96540);const n={},c=i.createContext(n);function r(e){const t=i.useContext(c);return i.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function o(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(n):e.components||n:r(e.components),i.createElement(c.Provider,{value:t},e.children)}},56469:(e,t,s)=>{s.r(t),s.d(t,{assets:()=>d,contentTitle:()=>o,default:()=>h,frontMatter:()=>r,metadata:()=>i,toc:()=>a});const i=JSON.parse('{"id":"sdk/community-js/types/Reference/interfaces/SCCustomNotificationType","title":"SCCustomNotificationType","description":"Interface SCCustomNotificationType.","source":"@site/docs/sdk/community-js/types/Reference/interfaces/SCCustomNotificationType.md","sourceDirName":"sdk/community-js/types/Reference/interfaces","slug":"/sdk/community-js/types/Reference/interfaces/SCCustomNotificationType","permalink":"/docs/sdk/community-js/types/Reference/interfaces/SCCustomNotificationType","draft":false,"unlisted":false,"editUrl":"https://github.com/selfcommunity/developers-doc/tree/main/docs/sdk/community-js/types/Reference/interfaces/SCCustomNotificationType.md","tags":[],"version":"current","frontMatter":{},"sidebar":"sdkSidebar","previous":{"title":"SCCustomMenuType","permalink":"/docs/sdk/community-js/types/Reference/interfaces/SCCustomMenuType"},"next":{"title":"SCCustomPageType","permalink":"/docs/sdk/community-js/types/Reference/interfaces/SCCustomPageType"}}');var n=s(74848),c=s(28453);const r={},o="SCCustomNotificationType",d={},a=[{value:"Properties",id:"properties",level:2}];function l(e){const t={a:"a",code:"code",h1:"h1",h2:"h2",header:"header",p:"p",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",...(0,c.R)(),...e.components};return(0,n.jsxs)(n.Fragment,{children:[(0,n.jsx)(t.header,{children:(0,n.jsx)(t.h1,{id:"sccustomnotificationtype",children:"SCCustomNotificationType"})}),"\n",(0,n.jsx)(t.p,{children:"Interface SCCustomNotificationType.\nCustom Notification Schema."}),"\n",(0,n.jsx)(t.h2,{id:"properties",children:"Properties"}),"\n",(0,n.jsxs)(t.table,{children:[(0,n.jsx)(t.thead,{children:(0,n.jsxs)(t.tr,{children:[(0,n.jsx)(t.th,{children:"Property"}),(0,n.jsx)(t.th,{children:"Type"}),(0,n.jsx)(t.th,{children:"Description"})]})}),(0,n.jsxs)(t.tbody,{children:[(0,n.jsxs)(t.tr,{children:[(0,n.jsxs)(t.td,{children:[(0,n.jsx)("a",{id:"description"})," ",(0,n.jsx)(t.code,{children:"description?"})]}),(0,n.jsx)(t.td,{children:(0,n.jsx)(t.code,{children:"string"})}),(0,n.jsx)(t.td,{children:"Notification description"})]}),(0,n.jsxs)(t.tr,{children:[(0,n.jsxs)(t.td,{children:[(0,n.jsx)("a",{id:"embed"})," ",(0,n.jsx)(t.code,{children:"embed?"})]}),(0,n.jsx)(t.td,{children:(0,n.jsx)(t.a,{href:"/docs/sdk/community-js/types/Reference/interfaces/SCEmbedType",children:(0,n.jsx)(t.code,{children:"SCEmbedType"})})}),(0,n.jsx)(t.td,{children:"Embed object if exist"})]}),(0,n.jsxs)(t.tr,{children:[(0,n.jsxs)(t.td,{children:[(0,n.jsx)("a",{id:"id"})," ",(0,n.jsx)(t.code,{children:"id"})]}),(0,n.jsx)(t.td,{children:(0,n.jsx)(t.code,{children:"number"})}),(0,n.jsx)(t.td,{children:"Id of the custom notification"})]}),(0,n.jsxs)(t.tr,{children:[(0,n.jsxs)(t.td,{children:[(0,n.jsx)("a",{id:"title"})," ",(0,n.jsx)(t.code,{children:"title?"})]}),(0,n.jsx)(t.td,{children:(0,n.jsx)(t.code,{children:"string"})}),(0,n.jsx)(t.td,{children:"Notification title"})]}),(0,n.jsxs)(t.tr,{children:[(0,n.jsxs)(t.td,{children:[(0,n.jsx)("a",{id:"type"})," ",(0,n.jsx)(t.code,{children:"type"})]}),(0,n.jsx)(t.td,{children:(0,n.jsx)(t.code,{children:"string"})}),(0,n.jsx)(t.td,{children:"Custom type notification"})]})]})]})]})}function h(e={}){const{wrapper:t}={...(0,c.R)(),...e.components};return t?(0,n.jsx)(t,{...e,children:(0,n.jsx)(l,{...e})}):l(e)}}}]);