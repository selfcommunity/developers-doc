"use strict";(self.webpackChunkdevelopers_doc=self.webpackChunkdevelopers_doc||[]).push([[93173],{20979:(n,t,e)=>{e.r(t),e.d(t,{assets:()=>a,contentTitle:()=>i,default:()=>d,frontMatter:()=>c,metadata:()=>o,toc:()=>u});const o=JSON.parse('{"id":"sdk/community-js/react-ui/Components/Incubator","title":"Incubator","description":"The Incubator component renders an incubator item containing incubator\'s title, info, a subscription status bar and a subscribe button,","source":"@site/docs/sdk/community-js/react-ui/Components/Incubator.mdx","sourceDirName":"sdk/community-js/react-ui/Components","slug":"/sdk/community-js/react-ui/Components/Incubator","permalink":"/docs/sdk/community-js/react-ui/Components/Incubator","draft":false,"unlisted":false,"editUrl":"https://github.com/selfcommunity/developers-doc/tree/main/docs/sdk/community-js/react-ui/Components/Incubator.mdx","tags":[],"version":"current","sidebarPosition":1,"frontMatter":{"sidebar_label":"Incubator","sidebar_position":1,"title":"Incubator"},"sidebar":"sdkSidebar","previous":{"title":"Groups","permalink":"/docs/sdk/community-js/react-ui/Components/Groups"},"next":{"title":"Incubator Suggestion","permalink":"/docs/sdk/community-js/react-ui/Components/IncubatorSuggestion"}}');var r=e(74848),s=e(28453);const c={sidebar_label:"Incubator",sidebar_position:1,title:"Incubator"},i=void 0,a={},u=[{value:"Usage",id:"usage",level:4}];function m(n){const t={blockquote:"blockquote",code:"code",h4:"h4",p:"p",pre:"pre",...(0,s.R)(),...n.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsxs)(t.blockquote,{children:["\n",(0,r.jsx)(t.p,{children:"The Incubator component renders an incubator item containing incubator's title, info, a subscription status bar and a subscribe button,\nthat allows users to subscribe/unsubscribe to an incubator."}),"\n"]}),"\n",(0,r.jsx)(t.h4,{id:"usage",children:"Usage"}),"\n",(0,r.jsx)(t.pre,{children:(0,r.jsx)(t.code,{className:"language-jsx",children:" import React from 'react';\n import {SCContextProvider} from '@selfcommunity/react-core';\n import {Incubator} from '@selfcommunity/react-ui';\n\n function App() {\n   const conf = {\n     portal: '<community-path>',\n     session: {\n       type: 'OAuth',\n       token: '<community-token>',\n       refreshToken: '<community-refresh-token>',\n       refreshTokenEndpoint: '<community-refresh-endpoint>',\n     },\n   };\n   return (\n     <SCContextProvider conf={conf}><Incubator /></SCContextProvider>\n   );\n }\n"})})]})}function d(n={}){const{wrapper:t}={...(0,s.R)(),...n.components};return t?(0,r.jsx)(t,{...n,children:(0,r.jsx)(m,{...n})}):m(n)}},28453:(n,t,e)=>{e.d(t,{R:()=>c,x:()=>i});var o=e(96540);const r={},s=o.createContext(r);function c(n){const t=o.useContext(s);return o.useMemo((function(){return"function"==typeof n?n(t):{...t,...n}}),[t,n])}function i(n){let t;return t=n.disableParentContext?"function"==typeof n.components?n.components(r):n.components||r:c(n.components),o.createElement(s.Provider,{value:t},n.children)}}}]);