"use strict";(self.webpackChunkdevelopers_doc=self.webpackChunkdevelopers_doc||[]).push([[9416],{52169:function(e,n,t){t.d(n,{Z:function(){return m}});var o=t(67294),s=t(99510),r=t(5730);function a(e,n){void 0===e&&(e=""),void 0===n&&(n={});var t=Object.keys(n).map((function(e){return encodeURIComponent(e)+"="+encodeURIComponent(n[e])})).join("&");return fetch(e,{method:"POST",headers:{accept:"application/json","content-type":"application/x-www-form-urlencoded"},body:t})}function c(){if((0,r.Z)()){var e={refresh_token:JSON.parse(window.localStorage.getItem("token")).refresh_token,client_id:s.r.user.client_id,grant_type:"refresh_token"};return a(s.r.portal+"/oauth/token/",e).then((function(e){return e.json()})).then((function(e){return{accessToken:e.access_token,refreshToken:e.refresh_token,tokenType:e.token_type,expiresIn:e.expires_in}})).catch((function(e){return Promise.reject(e)}))}}var i=function(){if((0,r.Z)())return JSON.parse(window.localStorage.getItem("token"))};function u(){var e=(0,r.Z)(),n=(0,o.useState)(i),t=n[0],c=n[1];return(0,o.useEffect)((function(){e&&(!t||1e3*t.expiresIn<Date.now()?a(s.r.portal+"/oauth/token/",s.r.user).then((function(e){return e.json()})).then((function(e){return{accessToken:e.access_token,refreshToken:e.refresh_token,tokenType:e.token_type,expiresIn:e.expires_in}})).catch((function(e){return e})).then((function(e){c(e)})):c(i))}),[e]),(0,o.useEffect)((function(){e&&window.localStorage.setItem("token",JSON.stringify(t))}),[e,t]),t}var d=t(46105),l=t(19666);function m(e){var n=e.children,t=u(),r={portal:s.r.portal,locale:{default:"en"},session:{type:"OAuth",clientId:s.r.user.client_id,authToken:t,handleRefreshToken:c},theme:{},handleAnonymousAction:function(){alert("Anonymous action")}};return o.createElement(l.Z,null,(function(){return o.createElement(d.SCContextProvider,{conf:r},n)}))}},99510:function(e,n,t){t.d(n,{r:function(){return o}});var o={user:{username:"beatrice",password:"Password!!Beatrice2021",client_id:"8HXeelXaQldhQmiSJDMhqNboELvDH402WIQIORFF",grant_type:"password"},portal:"https://www.fashionista.community"}},20235:function(e,n,t){t.r(n),t.d(n,{assets:function(){return k},contentTitle:function(){return p},default:function(){return y},frontMatter:function(){return m},metadata:function(){return f},toc:function(){return g}});var o=t(87462),s=t(63366),r=t(67294),a=t(3905),c=t(66110),i=t(19666);function u(){return r.createElement(i.Z,null,(function(){var e=t(78812).BroadcastMessages;return r.createElement(e,null)}))}var d=t(52169),l=["components"],m={sidebar_label:"Broadcast Messages",sidebar_position:1,title:"Broadcast Messages"},p=void 0,f={unversionedId:"sdk/community-ui/sc-ui/Components/BroadcastMessages",id:"sdk/community-ui/sc-ui/Components/BroadcastMessages",title:"Broadcast Messages",description:"The Broadcast Messages component renders a list of broadcast messages.",source:"@site/docs/sdk/community-ui/sc-ui/Components/BroadcastMessages.mdx",sourceDirName:"sdk/community-ui/sc-ui/Components",slug:"/sdk/community-ui/sc-ui/Components/BroadcastMessages",permalink:"/docs/sdk/community-ui/sc-ui/Components/BroadcastMessages",editUrl:"https://github.com/selfcommunity/developers-doc/tree/main/docs/sdk/community-ui/sc-ui/Components/BroadcastMessages.mdx",tags:[],version:"current",sidebarPosition:1,frontMatter:{sidebar_label:"Broadcast Messages",sidebar_position:1,title:"Broadcast Messages"},sidebar:"sdkSidebar",previous:{title:"Account Sign Up",permalink:"/docs/sdk/community-ui/sc-ui/Components/AccountSignUp"},next:{title:"Categories Followed",permalink:"/docs/sdk/community-ui/sc-ui/Components/CategoriesFollowed"}},k={},g=[],h={toc:g};function y(e){var n=e.components,t=(0,s.Z)(e,l);return(0,a.kt)("wrapper",(0,o.Z)({},h,t,{components:n,mdxType:"MDXLayout"}),(0,a.kt)("blockquote",null,(0,a.kt)("p",{parentName:"blockquote"},"The Broadcast Messages component renders a list of broadcast messages.")),(0,a.kt)(d.Z,{mdxType:"Logged"},(0,a.kt)(u,{mdxType:"BroadcastMessages"})),"#### Usage",(0,a.kt)(c.Z,{className:"language-jsx",mdxType:"CodeBlock"},"import React from 'react';\nimport BrowserOnly from '@docusaurus/BrowserOnly';\n\n\nexport default function App() {\n    return (\n        <BrowserOnly>\n            {() => {\n                const BroadcastMessages = require('@selfcommunity/ui').BroadcastMessages;\n                return <BroadcastMessages/>;\n            }}\n        </BrowserOnly>\n    );\n}\n\n\n\n\n"))}y.isMDXComponent=!0}}]);