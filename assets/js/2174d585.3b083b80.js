"use strict";(self.webpackChunkdevelopers_doc=self.webpackChunkdevelopers_doc||[]).push([[90721],{28453:(e,t,s)=>{s.d(t,{R:()=>i,x:()=>o});var n=s(96540);const d={},r=n.createContext(d);function i(e){const t=n.useContext(r);return n.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function o(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(d):e.components||d:i(e.components),n.createElement(r.Provider,{value:t},e.children)}},59406:(e,t,s)=>{s.r(t),s.d(t,{assets:()=>c,contentTitle:()=>o,default:()=>a,frontMatter:()=>i,metadata:()=>n,toc:()=>l});const n=JSON.parse('{"id":"sdk/community-js/react-ui/component_API/CustomAdv","title":"CustomAdv","description":"Interfaces","source":"@site/docs/sdk/community-js/react-ui/component_API/CustomAdv.md","sourceDirName":"sdk/community-js/react-ui/component_API","slug":"/sdk/community-js/react-ui/component_API/CustomAdv","permalink":"/docs/sdk/community-js/react-ui/component_API/CustomAdv","draft":false,"unlisted":false,"editUrl":"https://github.com/selfcommunity/developers-doc/tree/main/docs/sdk/community-js/react-ui/component_API/CustomAdv.md","tags":[],"version":"current","frontMatter":{},"sidebar":"sdkSidebar","previous":{"title":"CreateLiveStreamDialog","permalink":"/docs/sdk/community-js/react-ui/component_API/CreateLiveStreamDialog"},"next":{"title":"EditCourse","permalink":"/docs/sdk/community-js/react-ui/component_API/EditCourse"}}');var d=s(74848),r=s(28453);const i={},o="CustomAdv",c={},l=[{value:"Interfaces",id:"interfaces",level:2},{value:"CustomAdvProps",id:"customadvprops",level:3},{value:"Extends",id:"extends",level:4},{value:"Properties",id:"properties",level:4},{value:"Functions",id:"functions",level:2},{value:"CustomAdv()",id:"customadv-1",level:3},{value:"Import",id:"import",level:4},{value:"Component Name",id:"component-name",level:4},{value:"CSS",id:"css",level:4},{value:"Parameters",id:"parameters",level:4},{value:"Returns",id:"returns",level:4},{value:"CustomAdvSkeleton()",id:"customadvskeleton",level:3},{value:"Import",id:"import-1",level:4},{value:"Component Name",id:"component-name-1",level:4},{value:"CSS",id:"css-1",level:4},{value:"Returns",id:"returns-1",level:4}];function h(e){const t={a:"a",blockquote:"blockquote",code:"code",h1:"h1",h2:"h2",h3:"h3",h4:"h4",header:"header",hr:"hr",li:"li",p:"p",pre:"pre",strong:"strong",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",ul:"ul",...(0,r.R)(),...e.components};return(0,d.jsxs)(d.Fragment,{children:[(0,d.jsx)(t.header,{children:(0,d.jsx)(t.h1,{id:"customadv",children:"CustomAdv"})}),"\n",(0,d.jsx)(t.h2,{id:"interfaces",children:"Interfaces"}),"\n",(0,d.jsx)(t.h3,{id:"customadvprops",children:"CustomAdvProps"}),"\n",(0,d.jsx)(t.h4,{id:"extends",children:"Extends"}),"\n",(0,d.jsxs)(t.ul,{children:["\n",(0,d.jsx)(t.li,{children:(0,d.jsx)(t.code,{children:"VirtualScrollerItemProps"})}),"\n"]}),"\n",(0,d.jsx)(t.h4,{id:"properties",children:"Properties"}),"\n",(0,d.jsxs)(t.table,{children:[(0,d.jsx)(t.thead,{children:(0,d.jsxs)(t.tr,{children:[(0,d.jsx)(t.th,{children:"Property"}),(0,d.jsx)(t.th,{children:"Type"}),(0,d.jsx)(t.th,{children:"Description"}),(0,d.jsx)(t.th,{children:"Inherited from"})]})}),(0,d.jsxs)(t.tbody,{children:[(0,d.jsxs)(t.tr,{children:[(0,d.jsxs)(t.td,{children:[(0,d.jsx)("a",{id:"advid"})," ",(0,d.jsx)(t.code,{children:"advId?"})]}),(0,d.jsx)(t.td,{children:(0,d.jsx)(t.code,{children:"number"})}),(0,d.jsx)(t.td,{children:"Advertising id"}),(0,d.jsx)(t.td,{children:"-"})]}),(0,d.jsxs)(t.tr,{children:[(0,d.jsxs)(t.td,{children:[(0,d.jsx)("a",{id:"categoriesid"})," ",(0,d.jsx)(t.code,{children:"categoriesId?"})]}),(0,d.jsxs)(t.td,{children:[(0,d.jsx)(t.code,{children:"number"}),"[]"]}),(0,d.jsx)(t.td,{children:"Category ids if the adv must be related to specific categories"}),(0,d.jsx)(t.td,{children:"-"})]}),(0,d.jsxs)(t.tr,{children:[(0,d.jsxs)(t.td,{children:[(0,d.jsx)("a",{id:"classname"})," ",(0,d.jsx)(t.code,{children:"className?"})]}),(0,d.jsx)(t.td,{children:(0,d.jsx)(t.code,{children:"string"})}),(0,d.jsxs)(t.td,{children:["Overrides or extends the styles applied to the component. ",(0,d.jsx)(t.strong,{children:"Default"})," ",(0,d.jsx)(t.code,{children:"null"})]}),(0,d.jsx)(t.td,{children:"-"})]}),(0,d.jsxs)(t.tr,{children:[(0,d.jsxs)(t.td,{children:[(0,d.jsx)("a",{id:"groupsid"})," ",(0,d.jsx)(t.code,{children:"groupsId?"})]}),(0,d.jsxs)(t.td,{children:[(0,d.jsx)(t.code,{children:"number"}),"[]"]}),(0,d.jsx)(t.td,{children:"Group ids if the adv must be related to specific groups"}),(0,d.jsx)(t.td,{children:"-"})]}),(0,d.jsxs)(t.tr,{children:[(0,d.jsxs)(t.td,{children:[(0,d.jsx)("a",{id:"id"})," ",(0,d.jsx)(t.code,{children:"id?"})]}),(0,d.jsx)(t.td,{children:(0,d.jsx)(t.code,{children:"string"})}),(0,d.jsxs)(t.td,{children:["Id of the feed object ",(0,d.jsx)(t.strong,{children:"Default"})," ",(0,d.jsx)(t.code,{children:"'custom_adv'"})]}),(0,d.jsx)(t.td,{children:"-"})]}),(0,d.jsxs)(t.tr,{children:[(0,d.jsxs)(t.td,{children:[(0,d.jsx)("a",{id:"onheightchange"})," ",(0,d.jsx)(t.code,{children:"onHeightChange?"})]}),(0,d.jsxs)(t.td,{children:["() => ",(0,d.jsx)(t.code,{children:"void"})]}),(0,d.jsx)(t.td,{children:"Must be called whenever a list item's height changes (for example, when a user clicks an \"Expand\"/\"Collapse\" button of a list item): it re-measures the item's height and updates VirtualScroller layout. Every change in an item's height must come as a result of changing some kind of a state, be it the item's state in VirtualScroller via .onItemStateChange(), or some other state managed by the application. Call this method to re-measure the current element."}),(0,d.jsx)(t.td,{children:(0,d.jsx)(t.code,{children:"VirtualScrollerItemProps.onHeightChange"})})]}),(0,d.jsxs)(t.tr,{children:[(0,d.jsxs)(t.td,{children:[(0,d.jsx)("a",{id:"onstatechange"})," ",(0,d.jsx)(t.code,{children:"onStateChange?"})]}),(0,d.jsxs)(t.td,{children:["(",(0,d.jsx)(t.code,{children:"state"}),") => ",(0,d.jsx)(t.code,{children:"void"})]}),(0,d.jsx)(t.td,{children:'Save current state and when the component re-mount restore previous state using props. It is used to keep a copy of VirtualScroller state so that it could be quickly restored in case the VirtualScroller component gets unmounted and then re-mounted back again \u2014 for example, when the user navigates away by clicking on a list item and then navigates "Back" to the list.'}),(0,d.jsx)(t.td,{children:(0,d.jsx)(t.code,{children:"VirtualScrollerItemProps.onStateChange"})})]}),(0,d.jsxs)(t.tr,{children:[(0,d.jsxs)(t.td,{children:[(0,d.jsx)("a",{id:"position"})," ",(0,d.jsx)(t.code,{children:"position?"})]}),(0,d.jsx)(t.td,{children:(0,d.jsx)(t.code,{children:"SCCustomAdvPosition"})}),(0,d.jsx)(t.td,{children:"Position of the ADV"}),(0,d.jsx)(t.td,{children:"-"})]}),(0,d.jsxs)(t.tr,{children:[(0,d.jsxs)(t.td,{children:[(0,d.jsx)("a",{id:"prefixedheight"})," ",(0,d.jsx)(t.code,{children:"prefixedHeight?"})]}),(0,d.jsx)(t.td,{children:(0,d.jsx)(t.code,{children:"number"})}),(0,d.jsx)(t.td,{children:"Prefixed height. Usefull to re-mount item on scroll feed."}),(0,d.jsx)(t.td,{children:"-"})]})]})]}),"\n",(0,d.jsx)(t.h2,{id:"functions",children:"Functions"}),"\n",(0,d.jsx)(t.h3,{id:"customadv-1",children:"CustomAdv()"}),"\n",(0,d.jsxs)(t.blockquote,{children:["\n",(0,d.jsxs)(t.p,{children:[(0,d.jsx)(t.strong,{children:"CustomAdv"}),"(",(0,d.jsx)(t.code,{children:"inProps"}),"): ",(0,d.jsx)(t.code,{children:"Element"})]}),"\n"]}),"\n",(0,d.jsxs)(t.blockquote,{children:["\n",(0,d.jsx)(t.p,{children:"API documentation for the Community-JS CustomAdv component. Learn about the available props and the CSS API."}),"\n"]}),"\n",(0,d.jsxs)(t.p,{children:["This component renders custom adv banners.\nTake a look at our ",(0,d.jsx)("strong",{children:"demo"})," component ",(0,d.jsx)(t.a,{href:"/docs/sdk/community-js/react-ui/Components/CustomAdv",children:"here"})]}),"\n",(0,d.jsx)(t.h4,{id:"import",children:"Import"}),"\n",(0,d.jsx)(t.pre,{children:(0,d.jsx)(t.code,{className:"language-jsx",children:"import {CustomAdv} from '@selfcommunity/react-ui';\n"})}),"\n",(0,d.jsx)(t.h4,{id:"component-name",children:"Component Name"}),"\n",(0,d.jsxs)(t.p,{children:["The name ",(0,d.jsx)(t.code,{children:"SCCustomAdv"})," can be used when providing style overrides in the theme."]}),"\n",(0,d.jsx)(t.h4,{id:"css",children:"CSS"}),"\n",(0,d.jsxs)(t.table,{children:[(0,d.jsx)(t.thead,{children:(0,d.jsxs)(t.tr,{children:[(0,d.jsx)(t.th,{children:"Rule Name"}),(0,d.jsx)(t.th,{children:"Global class"}),(0,d.jsx)(t.th,{children:"Description"})]})}),(0,d.jsxs)(t.tbody,{children:[(0,d.jsxs)(t.tr,{children:[(0,d.jsx)(t.td,{children:"root"}),(0,d.jsx)(t.td,{children:".SCCustomAdv-root"}),(0,d.jsx)(t.td,{children:"Styles applied to the root element."})]}),(0,d.jsxs)(t.tr,{children:[(0,d.jsx)(t.td,{children:"wrap"}),(0,d.jsx)(t.td,{children:".SCCustomAdv-wrap"}),(0,d.jsx)(t.td,{children:"Styles applied to wrap an element."})]}),(0,d.jsxs)(t.tr,{children:[(0,d.jsx)(t.td,{children:"image"}),(0,d.jsx)(t.td,{children:".SCCustomAdv-image"}),(0,d.jsx)(t.td,{children:"Styles applied to the image element."})]}),(0,d.jsxs)(t.tr,{children:[(0,d.jsx)(t.td,{children:"embedCode"}),(0,d.jsx)(t.td,{children:".SCCustomAdv-embed-code"}),(0,d.jsx)(t.td,{children:"Styles applied to the embed code section."})]}),(0,d.jsxs)(t.tr,{children:[(0,d.jsx)(t.td,{children:"prefixedHeight"}),(0,d.jsx)(t.td,{children:".SCCustomAdv-prefixed-height"}),(0,d.jsx)(t.td,{children:"Styles applied to handle a prefixed height."})]})]})]}),"\n",(0,d.jsx)(t.h4,{id:"parameters",children:"Parameters"}),"\n",(0,d.jsxs)(t.table,{children:[(0,d.jsx)(t.thead,{children:(0,d.jsxs)(t.tr,{children:[(0,d.jsx)(t.th,{children:"Parameter"}),(0,d.jsx)(t.th,{children:"Type"}),(0,d.jsx)(t.th,{children:"Description"})]})}),(0,d.jsx)(t.tbody,{children:(0,d.jsxs)(t.tr,{children:[(0,d.jsx)(t.td,{children:(0,d.jsx)(t.code,{children:"inProps"})}),(0,d.jsx)(t.td,{children:(0,d.jsx)(t.a,{href:"#customadvprops",children:(0,d.jsx)(t.code,{children:"CustomAdvProps"})})}),(0,d.jsx)(t.td,{})]})})]}),"\n",(0,d.jsx)(t.h4,{id:"returns",children:"Returns"}),"\n",(0,d.jsx)(t.p,{children:(0,d.jsx)(t.code,{children:"Element"})}),"\n",(0,d.jsx)(t.hr,{}),"\n",(0,d.jsx)(t.h3,{id:"customadvskeleton",children:"CustomAdvSkeleton()"}),"\n",(0,d.jsxs)(t.blockquote,{children:["\n",(0,d.jsxs)(t.p,{children:[(0,d.jsx)(t.strong,{children:"CustomAdvSkeleton"}),"(): ",(0,d.jsx)(t.code,{children:"Element"})]}),"\n"]}),"\n",(0,d.jsxs)(t.blockquote,{children:["\n",(0,d.jsx)(t.p,{children:"API documentation for the Community-JS Custom Adv Skeleton component. Learn about the available props and the CSS API."}),"\n"]}),"\n",(0,d.jsx)(t.h4,{id:"import-1",children:"Import"}),"\n",(0,d.jsx)(t.pre,{children:(0,d.jsx)(t.code,{className:"language-jsx",children:"import {CustomAdvSkeleton} from '@selfcommunity/react-ui';\n"})}),"\n",(0,d.jsx)(t.h4,{id:"component-name-1",children:"Component Name"}),"\n",(0,d.jsxs)(t.p,{children:["The name ",(0,d.jsx)(t.code,{children:"SCCustomAdv-skeleton-root"})," can be used when providing style overrides in the theme."]}),"\n",(0,d.jsx)(t.h4,{id:"css-1",children:"CSS"}),"\n",(0,d.jsxs)(t.table,{children:[(0,d.jsx)(t.thead,{children:(0,d.jsxs)(t.tr,{children:[(0,d.jsx)(t.th,{children:"Rule Name"}),(0,d.jsx)(t.th,{children:"Global class"}),(0,d.jsx)(t.th,{children:"Description"})]})}),(0,d.jsx)(t.tbody,{children:(0,d.jsxs)(t.tr,{children:[(0,d.jsx)(t.td,{children:"root"}),(0,d.jsx)(t.td,{children:".SCCustomAdv-skeleton-root"}),(0,d.jsx)(t.td,{children:"Styles applied to the root element."})]})})]}),"\n",(0,d.jsx)(t.h4,{id:"returns-1",children:"Returns"}),"\n",(0,d.jsx)(t.p,{children:(0,d.jsx)(t.code,{children:"Element"})})]})}function a(e={}){const{wrapper:t}={...(0,r.R)(),...e.components};return t?(0,d.jsx)(t,{...e,children:(0,d.jsx)(h,{...e})}):h(e)}}}]);