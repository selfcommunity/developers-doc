"use strict";(self.webpackChunkdevelopers_doc=self.webpackChunkdevelopers_doc||[]).push([[64764],{65858:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>l,contentTitle:()=>c,default:()=>h,frontMatter:()=>o,metadata:()=>r,toc:()=>a});var s=n(85893),i=n(11151);const o={id:"ToastNotifications",title:"Module: ToastNotifications",sidebar_label:"ToastNotifications",sidebar_position:0,custom_edit_url:null},c=void 0,r={id:"sdk/community-js/react-ui/component_API/modules/ToastNotifications",title:"Module: ToastNotifications",description:"Interfaces",source:"@site/docs/sdk/community-js/react-ui/component_API/modules/ToastNotifications.md",sourceDirName:"sdk/community-js/react-ui/component_API/modules",slug:"/sdk/community-js/react-ui/component_API/modules/ToastNotifications",permalink:"/docs/sdk/community-js/react-ui/component_API/modules/ToastNotifications",draft:!1,unlisted:!1,editUrl:null,tags:[],version:"current",sidebarPosition:0,frontMatter:{id:"ToastNotifications",title:"Module: ToastNotifications",sidebar_label:"ToastNotifications",sidebar_position:0,custom_edit_url:null},sidebar:"sdkSidebar",previous:{title:"SnippetNotifications",permalink:"/docs/sdk/community-js/react-ui/component_API/modules/SnippetNotifications"},next:{title:"User",permalink:"/docs/sdk/community-js/react-ui/component_API/modules/User"}},l={},a=[{value:"Interfaces",id:"interfaces",level:2},{value:"Functions",id:"functions",level:2},{value:"ToastNotificationsSkeleton",id:"toastnotificationsskeleton",level:3},{value:"Import",id:"import",level:4},{value:"Component Name",id:"component-name",level:4},{value:"CSS",id:"css",level:4},{value:"Returns",id:"returns",level:4},{value:"Defined in",id:"defined-in",level:4},{value:"UserToastNotifications",id:"usertoastnotifications",level:3},{value:"Import",id:"import-1",level:4},{value:"Component Name",id:"component-name-1",level:4},{value:"CSS",id:"css-1",level:4},{value:"Parameters",id:"parameters",level:4},{value:"Returns",id:"returns-1",level:4},{value:"Defined in",id:"defined-in-1",level:4}];function d(e){const t={a:"a",blockquote:"blockquote",code:"code",h2:"h2",h3:"h3",h4:"h4",hr:"hr",li:"li",p:"p",pre:"pre",strong:"strong",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",ul:"ul",...(0,i.a)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(t.h2,{id:"interfaces",children:"Interfaces"}),"\n",(0,s.jsxs)(t.ul,{children:["\n",(0,s.jsx)(t.li,{children:(0,s.jsx)(t.a,{href:"/docs/sdk/community-js/react-ui/component_API/interfaces/ToastNotifications.ToastNotificationsProps",children:"ToastNotificationsProps"})}),"\n"]}),"\n",(0,s.jsx)(t.h2,{id:"functions",children:"Functions"}),"\n",(0,s.jsx)(t.h3,{id:"toastnotificationsskeleton",children:"ToastNotificationsSkeleton"}),"\n",(0,s.jsxs)(t.p,{children:["\u25b8 ",(0,s.jsx)(t.strong,{children:"ToastNotificationsSkeleton"}),"(): ",(0,s.jsx)(t.code,{children:"JSX.Element"})]}),"\n",(0,s.jsxs)(t.blockquote,{children:["\n",(0,s.jsx)(t.p,{children:"API documentation for the Community-JS Toast Notifications Skeleton component. Learn about the available props and the CSS API."}),"\n"]}),"\n",(0,s.jsx)(t.h4,{id:"import",children:"Import"}),"\n",(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{className:"language-jsx",children:"import {ToastNotificationsSkeleton} from '@selfcommunity/react-ui';\n"})}),"\n",(0,s.jsx)(t.h4,{id:"component-name",children:"Component Name"}),"\n",(0,s.jsxs)(t.p,{children:["The name ",(0,s.jsx)(t.code,{children:"SCToastNotifications-skeleton-root"})," can be used when providing style overrides in the theme."]}),"\n",(0,s.jsx)(t.h4,{id:"css",children:"CSS"}),"\n",(0,s.jsxs)(t.table,{children:[(0,s.jsx)(t.thead,{children:(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.th,{children:"Rule Name"}),(0,s.jsx)(t.th,{children:"Global class"}),(0,s.jsx)(t.th,{children:"Description"})]})}),(0,s.jsx)(t.tbody,{children:(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:"root"}),(0,s.jsx)(t.td,{children:".SCToastNotifications-skeleton-root"}),(0,s.jsx)(t.td,{children:"Styles applied to the root element."})]})})]}),"\n",(0,s.jsx)(t.h4,{id:"returns",children:"Returns"}),"\n",(0,s.jsx)(t.p,{children:(0,s.jsx)(t.code,{children:"JSX.Element"})}),"\n",(0,s.jsx)(t.h4,{id:"defined-in",children:"Defined in"}),"\n",(0,s.jsx)(t.p,{children:(0,s.jsx)(t.a,{href:"https://github.com/selfcommunity/community-js/blob/6572d63/packages/react-ui/src/components/ToastNotifications/Skeleton.tsx#L34",children:"packages/react-ui/src/components/ToastNotifications/Skeleton.tsx:34"})}),"\n",(0,s.jsx)(t.hr,{}),"\n",(0,s.jsx)(t.h3,{id:"usertoastnotifications",children:"UserToastNotifications"}),"\n",(0,s.jsxs)(t.p,{children:["\u25b8 ",(0,s.jsx)(t.strong,{children:"UserToastNotifications"}),"(",(0,s.jsx)(t.code,{children:"inProps"}),"): ",(0,s.jsx)(t.code,{children:"JSX.Element"})]}),"\n",(0,s.jsxs)(t.blockquote,{children:["\n",(0,s.jsx)(t.p,{children:"API documentation for the Community-JS Toast Notifications component. Learn about the available props and the CSS API."}),"\n"]}),"\n",(0,s.jsx)(t.h4,{id:"import-1",children:"Import"}),"\n",(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{className:"language-jsx",children:"import {ToastNotifications} from '@selfcommunity/react-ui';\n"})}),"\n",(0,s.jsx)(t.h4,{id:"component-name-1",children:"Component Name"}),"\n",(0,s.jsxs)(t.p,{children:["The name ",(0,s.jsx)(t.code,{children:"SCToastNotifications"})," can be used when providing style overrides in the theme."]}),"\n",(0,s.jsx)(t.h4,{id:"css-1",children:"CSS"}),"\n",(0,s.jsxs)(t.table,{children:[(0,s.jsx)(t.thead,{children:(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.th,{children:"Rule Name"}),(0,s.jsx)(t.th,{children:"Global class"}),(0,s.jsx)(t.th,{children:"Description"})]})}),(0,s.jsxs)(t.tbody,{children:[(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:"root"}),(0,s.jsx)(t.td,{children:".SCUserNotifications-root"}),(0,s.jsx)(t.td,{children:"Styles applied to the root element."})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:"toastMessage"}),(0,s.jsx)(t.td,{children:".SCUserToastNotifications-toast-message"}),(0,s.jsx)(t.td,{children:"Styles applied to the toast message element."})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:"toastContent"}),(0,s.jsx)(t.td,{children:".SCUserToastNotifications-toast-content"}),(0,s.jsx)(t.td,{children:"Styles applied to the toast content element."})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:"toastActions"}),(0,s.jsx)(t.td,{children:".SCUserToastNotifications-toast-actions"}),(0,s.jsx)(t.td,{children:"Styles applied to the toast actions section."})]})]})]}),"\n",(0,s.jsx)(t.h4,{id:"parameters",children:"Parameters"}),"\n",(0,s.jsxs)(t.table,{children:[(0,s.jsx)(t.thead,{children:(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.th,{style:{textAlign:"left"},children:"Name"}),(0,s.jsx)(t.th,{style:{textAlign:"left"},children:"Type"})]})}),(0,s.jsx)(t.tbody,{children:(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{style:{textAlign:"left"},children:(0,s.jsx)(t.code,{children:"inProps"})}),(0,s.jsx)(t.td,{style:{textAlign:"left"},children:(0,s.jsx)(t.a,{href:"/docs/sdk/community-js/react-ui/component_API/interfaces/ToastNotifications.ToastNotificationsProps",children:(0,s.jsx)(t.code,{children:"ToastNotificationsProps"})})})]})})]}),"\n",(0,s.jsx)(t.h4,{id:"returns-1",children:"Returns"}),"\n",(0,s.jsx)(t.p,{children:(0,s.jsx)(t.code,{children:"JSX.Element"})}),"\n",(0,s.jsx)(t.h4,{id:"defined-in-1",children:"Defined in"}),"\n",(0,s.jsx)(t.p,{children:(0,s.jsx)(t.a,{href:"https://github.com/selfcommunity/community-js/blob/6572d63/packages/react-ui/src/components/ToastNotifications/ToastNotifications.tsx#L71",children:"packages/react-ui/src/components/ToastNotifications/ToastNotifications.tsx:71"})})]})}function h(e={}){const{wrapper:t}={...(0,i.a)(),...e.components};return t?(0,s.jsx)(t,{...e,children:(0,s.jsx)(d,{...e})}):d(e)}},11151:(e,t,n)=>{n.d(t,{Z:()=>r,a:()=>c});var s=n(67294);const i={},o=s.createContext(i);function c(e){const t=s.useContext(o);return s.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function r(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:c(e.components),s.createElement(o.Provider,{value:t},e.children)}}}]);